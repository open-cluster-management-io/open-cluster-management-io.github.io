<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Open Cluster Management</title><link>https://open-cluster-management.io/</link><description>Recent content on Open Cluster Management</description><generator>Hugo</generator><language>en</language><lastBuildDate>Thu, 22 May 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://open-cluster-management.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Add-ons</title><link>https://open-cluster-management.io/docs/concepts/add-on-extensibility/addon/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/docs/concepts/add-on-extensibility/addon/</guid><description>&lt;h2 id="what-is-an-add-on"&gt;What is an add-on?&lt;/h2&gt;
&lt;p&gt;Open-cluster-management has a built-in mechanism named &lt;a href="https://github.com/open-cluster-management-io/addon-framework"&gt;addon-framework&lt;/a&gt;
to help developers to develop an extension based on the foundation components
for the purpose of working with multiple clusters in custom cases. A typical
addon should consist of two kinds of components:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Addon Agent&lt;/strong&gt;: A Kubernetes controller &lt;em&gt;in the managed cluster&lt;/em&gt; that manages
the managed cluster for the hub admins. A typical addon agent is expected to
be working by subscribing the prescriptions (e.g. in forms of CustomResources)
from the hub cluster and then consistently reconcile the state of the managed
cluster like an ordinary Kubernetes operator does.&lt;/p&gt;</description></item><item><title>Architecture</title><link>https://open-cluster-management.io/docs/concepts/architecture/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/docs/concepts/architecture/</guid><description>&lt;p&gt;This page is an overview of open cluster management.&lt;/p&gt;
&lt;h2 id="overview"&gt;Overview&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Open Cluster Management&lt;/strong&gt; (OCM) is a powerful, modular, extensible platform
for Kubernetes multi-cluster orchestration. Learning from the past failed
lessons of building Kubernetes federation systems in the Kubernetes community,
in OCM we will be jumping out of the legacy centric, imperative architecture of
&lt;a href="https://github.com/kubernetes-sigs/kubefed"&gt;Kubefed v2&lt;/a&gt; and embracing the
&amp;ldquo;hub-agent&amp;rdquo; architecture which is identical to the original pattern of
&amp;ldquo;hub-kubelet&amp;rdquo; from Kubernetes. Hence, intuitively in OCM our multi-cluster
control plane is modeled as a &amp;ldquo;Hub&amp;rdquo; and on the other hand each of the clusters
being managed by the &amp;ldquo;Hub&amp;rdquo; will be a &amp;ldquo;Klusterlet&amp;rdquo; which is obviously inspired
from the original name of &amp;ldquo;kubelet&amp;rdquo;. Here&amp;rsquo;s a more detailed clarification of
the two models we will be frequently using throughout the world of OCM:&lt;/p&gt;</description></item><item><title>ClusterClaim</title><link>https://open-cluster-management.io/docs/concepts/cluster-inventory/clusterclaim/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/docs/concepts/cluster-inventory/clusterclaim/</guid><description>&lt;h2 id="what-is-clusterclaim"&gt;What is ClusterClaim?&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;ClusterClaim&lt;/code&gt; is a cluster-scoped API available to users on a managed cluster.
The &lt;code&gt;ClusterClaim&lt;/code&gt; objects are collected from the managed cluster and saved into
the status of the corresponding &lt;code&gt;ManagedCluster&lt;/code&gt; object on the hub.&lt;/p&gt;
&lt;h2 id="usage"&gt;Usage&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;ClusterClaim&lt;/code&gt; is used to specify additional properties of the managed cluster like
the clusterID, version, vendor and cloud provider. We defined some reserved &lt;code&gt;ClusterClaims&lt;/code&gt;
like &lt;code&gt;id.k8s.io&lt;/code&gt; which is a unique identifier for the managed cluster.&lt;/p&gt;</description></item><item><title>Deploy Kubernetes resources to the managed clusters</title><link>https://open-cluster-management.io/docs/scenarios/deploy-kubernetes-resources/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/docs/scenarios/deploy-kubernetes-resources/</guid><description>&lt;p&gt;After bootstrapping an OCM environment of at least one managed clusters, now
it&amp;rsquo;s time to begin your first journey of deploying Kubernetes resources into
your managed clusters with OCM&amp;rsquo;s &lt;code&gt;ManifestWork&lt;/code&gt; API.&lt;/p&gt;
&lt;h2 id="prerequisites"&gt;Prerequisites&lt;/h2&gt;
&lt;p&gt;Before we get started with the following tutorial, let&amp;rsquo;s clarify a few terms
we&amp;rsquo;re going to use in the context.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Cluster namespace&lt;/strong&gt;: After a managed cluster is successfully registered
into the hub, the hub registration controller will be automatically
provisioning a &lt;code&gt;cluster namespace&lt;/code&gt; dedicated for the cluster of which the
name will be the same as the managed cluster. The &lt;code&gt;cluster namespace&lt;/code&gt; is used
for storing any custom resources/configurations that effectively belongs
to the managed cluster.&lt;/p&gt;</description></item><item><title>Distribute workload with placement selected managed clusters</title><link>https://open-cluster-management.io/docs/scenarios/distribute-workload-with-placement/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/docs/scenarios/distribute-workload-with-placement/</guid><description>&lt;p&gt;The &lt;code&gt;Placement&lt;/code&gt; API is used to dynamically select a set of &lt;code&gt;ManagedCluster&lt;/code&gt; in
one or multiple &lt;code&gt;ManagedClusterSets&lt;/code&gt; so that the workloads can be deployed to
these clusters.&lt;/p&gt;
&lt;p&gt;If you define a valid &lt;code&gt;Placement&lt;/code&gt;, the placement controller generates a
corresponding &lt;code&gt;PlacementDecision&lt;/code&gt; with the selected clusters listed in the
status. As an end-user, you can parse the selected clusters and then operate on
the target clusters. You can also integrate a high-level workload orchestrator
with the &lt;code&gt;PlacementDecision&lt;/code&gt; to leverage its scheduling capabilities.&lt;/p&gt;</description></item><item><title>Extend the multicluster scheduling capabilities with placement</title><link>https://open-cluster-management.io/docs/scenarios/extend-multicluster-scheduling-capabilities/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/docs/scenarios/extend-multicluster-scheduling-capabilities/</guid><description>&lt;p&gt;The &lt;code&gt;Placement&lt;/code&gt; API is used to dynamically select a set of &lt;code&gt;ManagedCluster&lt;/code&gt; in one or multiple &lt;code&gt;ManagedClusterSets&lt;/code&gt; so that the workloads can be deployed to these clusters. You can use placement to filter clusters by label or claim selector, also placement provides some default prioritizers which can be used to sort and select the most suitable clusters.&lt;/p&gt;
&lt;p&gt;One of the default prioritizers are ResourceAllocatableCPU and ResourceAllocatableMemory. They provide the capability to sort clusters based on the allocatable CPU and memory. However, when considering the resource based scheduling, there&amp;rsquo;s a gap that the cluster’s &amp;ldquo;AllocatableCPU&amp;rdquo; and &amp;ldquo;AllocatableMemory&amp;rdquo; are static values that won’t change even if &amp;ldquo;the cluster is running out of resources&amp;rdquo;. And in some cases, the prioritizer needs more extra data to calculate the score of the managed cluster. For example, there is a requirement to schedule based on resource monitoring data from the cluster. For this reason, we need a more extensible way to support scheduling based on customized scores.&lt;/p&gt;</description></item><item><title>Extending managed clusters with custom attributes</title><link>https://open-cluster-management.io/docs/scenarios/extending-managed-clusters/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/docs/scenarios/extending-managed-clusters/</guid><description>&lt;p&gt;Under some cases we need a convenient way to extend OCM&amp;rsquo;s &lt;a href="https://open-cluster-management.io/docs/concepts/cluster-inventory/managedcluster/"&gt;Managed Cluster&lt;/a&gt;
data model so that our own custom multi-cluster system can easily work over the
OCM&amp;rsquo;s native cluster api otherwise we will have to maintain an additional
Kubernetes&amp;rsquo; &lt;a href="https://kubernetes.io/docs/tasks/extend-kubernetes/custom-resources/custom-resource-definitions/"&gt;CustomResourceDefinition&lt;/a&gt;
in the project. OCM definitely supports developers to decorate the cluster api
with minimal effort, and in the following content we will walk through that
briefly.&lt;/p&gt;
&lt;p&gt;The original cluster model in OCM &amp;ldquo;Managed Cluster&amp;rdquo; is designed to be a
&lt;strong&gt;neat&lt;/strong&gt; and &lt;strong&gt;light-weight&lt;/strong&gt; placeholder resource of which the spec doesn&amp;rsquo;t
require any additional information other than &amp;ldquo;whether the cluster is
accepted or not&amp;rdquo; i.e. &lt;code&gt;.spec.hubAcceptsClient&lt;/code&gt;, and all the other fields
in the spec are totally optional, e.g. &lt;code&gt;.spec.managedClusterClientConfigs&lt;/code&gt;
is only required until we install some addons that replying on that
information.&lt;/p&gt;</description></item><item><title>Integration with Argo CD</title><link>https://open-cluster-management.io/docs/scenarios/integration-with-argocd/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/docs/scenarios/integration-with-argocd/</guid><description>&lt;p&gt;&lt;a href="https://argo-cd.readthedocs.io/en/stable/"&gt;Argo CD&lt;/a&gt; is a declarative, GitOps continuous delivery tool, which allows developers to define and control deployment of Kubernetes application resources from within their existing Git workflow. By integrating Open Cluster Management (OCM) with Argo CD, it enables both automation and greater flexibility managing Argo CD Applications across a large number of OCM managed clusters.&lt;/p&gt;
&lt;p&gt;In this article, we want to show you how to integrate Argo CD with OCM and deploy application to OCM managed clusters by leveraging the &lt;code&gt;Placement&lt;/code&gt; API, which supports multi-cluster scheduling.&lt;/p&gt;</description></item><item><title>Manage a cluster with multiple hubs</title><link>https://open-cluster-management.io/docs/scenarios/manage-cluster-with-multiple-hubs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/docs/scenarios/manage-cluster-with-multiple-hubs/</guid><description>&lt;p&gt;Normally an Open Cluster Management (OCM) hub manages multiple managed clusters and a cluster only registers to one OCM hub. While there might be some user scenarios, where a single cluster may want to join more than one OCM hub as a managed cluster, including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In an organization, each department may setup an OCM hub to manage clusters owned by this department, and all clusters are managed by a central OCM hub owned by IT department to enforce organization wide security policies.&lt;/li&gt;
&lt;li&gt;A service provider creates clusters for customers. The underlying system of the service provider uses OCM hubs to manage all the clusters. Once customer gets a cluster from the service provider, they may also want to manage this cluster with customer&amp;rsquo;s OCM hub.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This document shows how to achieve it with OCM.&lt;/p&gt;</description></item><item><title>ManifestWork</title><link>https://open-cluster-management.io/docs/concepts/work-distribution/manifestwork/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/docs/concepts/work-distribution/manifestwork/</guid><description>&lt;h2 id="what-is-manifestwork"&gt;What is &lt;code&gt;ManifestWork&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;ManifestWork&lt;/code&gt; is used to define a group of Kubernetes resources on the hub to be applied to the managed cluster. In the open-cluster-management project, a &lt;code&gt;ManifestWork&lt;/code&gt; resource must be created in the cluster namespace. A work agent implemented in &lt;a href="https://github.com/open-cluster-management-io/ocm/tree/main/cmd/work"&gt;work&lt;/a&gt; project is run on the managed cluster and monitors the &lt;code&gt;ManifestWork&lt;/code&gt; resource in the cluster namespace on the hub cluster.&lt;/p&gt;
&lt;p&gt;An example of &lt;code&gt;ManifestWork&lt;/code&gt; to deploy a deployment to the managed cluster is shown in the following example.&lt;/p&gt;</description></item><item><title>Migrate workload with placement</title><link>https://open-cluster-management.io/docs/scenarios/migrate-workload-with-placement/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/docs/scenarios/migrate-workload-with-placement/</guid><description>&lt;p&gt;The &lt;code&gt;Placement&lt;/code&gt; API is used to dynamically select a set of &lt;code&gt;ManagedCluster&lt;/code&gt; in
one or multiple &lt;code&gt;ManagedClusterSets&lt;/code&gt; so that the workloads can be deployed to
these clusters.&lt;/p&gt;
&lt;p&gt;If you define a valid &lt;code&gt;Placement&lt;/code&gt;, the placement controller generates a
corresponding &lt;code&gt;PlacementDecision&lt;/code&gt; with the selected clusters listed in the
status. As an end-user, you can parse the selected clusters and then operate on
the target clusters. You can also integrate a high-level workload orchestrator
with the &lt;code&gt;PlacementDecision&lt;/code&gt; to leverage its scheduling capabilities.&lt;/p&gt;</description></item><item><title>Monitoring OCM using Prometheus-Operator</title><link>https://open-cluster-management.io/docs/getting-started/administration/monitoring/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/docs/getting-started/administration/monitoring/</guid><description>&lt;p&gt;In this page, we provide a way to monitor your OCM environment using Prometheus-Operator.&lt;/p&gt;
&lt;h2 id="before-you-get-started"&gt;Before you get started&lt;/h2&gt;
&lt;p&gt;You must have an OCM environment set up. You can also follow our recommended &lt;a href="https://open-cluster-management.io/docs/getting-started/quick-start/"&gt;quick start guide&lt;/a&gt; to set up a playground OCM environment.&lt;/p&gt;
&lt;p&gt;And then please &lt;a href="https://prometheus-operator.dev/docs/prologue/quick-start/"&gt;install the Prometheus-Operator&lt;/a&gt; in your hub cluster. You can also run the following commands copied from the official doc:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;git clone https://github.com/prometheus-operator/kube-prometheus.git
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#204a87"&gt;cd&lt;/span&gt; kube-prometheus
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#8f5902;font-style:italic"&gt;# Create the namespace and CRDs, and then wait for them to be availble before creating the remaining resources&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;kubectl create -f manifests/setup
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#8f5902;font-style:italic"&gt;# Wait until the &amp;#34;servicemonitors&amp;#34; CRD is created. The message &amp;#34;No resources found&amp;#34; means success in this context.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#204a87;font-weight:bold"&gt;until&lt;/span&gt; kubectl get servicemonitors --all-namespaces &lt;span style="color:#000;font-weight:bold"&gt;;&lt;/span&gt; &lt;span style="color:#204a87;font-weight:bold"&gt;do&lt;/span&gt; date&lt;span style="color:#000;font-weight:bold"&gt;;&lt;/span&gt; sleep 1&lt;span style="color:#000;font-weight:bold"&gt;;&lt;/span&gt; &lt;span style="color:#204a87"&gt;echo&lt;/span&gt; &lt;span style="color:#4e9a06"&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style="color:#000;font-weight:bold"&gt;;&lt;/span&gt; &lt;span style="color:#204a87;font-weight:bold"&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;kubectl create -f manifests/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="monitoring-the-control-plane-resource-usage"&gt;Monitoring the control-plane resource usage.&lt;/h2&gt;
&lt;p&gt;You can use &lt;code&gt;kubectl proxy&lt;/code&gt; to open prometheus UI in your browser on &lt;a href="http://localhost:9090/"&gt;localhost:9090&lt;/a&gt;:&lt;/p&gt;</description></item><item><title>Placement</title><link>https://open-cluster-management.io/docs/concepts/content-placement/placement/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/docs/concepts/content-placement/placement/</guid><description>&lt;p&gt;&lt;strong&gt;CHANGE NOTE&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;Placement&lt;/code&gt; and &lt;code&gt;PlacementDecision&lt;/code&gt; API v1alpha1 version will no longer be served in OCM v0.9.0.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Migrate manifests and API clients to use the &lt;code&gt;Placement&lt;/code&gt; and &lt;code&gt;PlacementDecision&lt;/code&gt; API v1beta1 version, available since OCM v0.7.0.&lt;/li&gt;
&lt;li&gt;All existing persisted objects are accessible via the new API.&lt;/li&gt;
&lt;li&gt;Notable changes:
&lt;ul&gt;
&lt;li&gt;The field &lt;code&gt;spec.prioritizerPolicy.configurations.name&lt;/code&gt; in &lt;code&gt;Placement&lt;/code&gt; API v1alpha1 is removed and replaced by
&lt;code&gt;spec.prioritizerPolicy.configurations.scoreCoordinate.builtIn&lt;/code&gt; in v1beta1.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Clusters in terminating state will not be selected by placements from OCM v0.14.0.&lt;/p&gt;</description></item><item><title>Policy framework</title><link>https://open-cluster-management.io/docs/getting-started/integration/policy-controllers/policy-framework/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/docs/getting-started/integration/policy-controllers/policy-framework/</guid><description>&lt;p&gt;The policy framework provides governance capabilities to OCM managed Kubernetes clusters. Policies provide visibility
and drive remediation for various security and configuration aspects to help IT administrators meet their requirements.&lt;/p&gt;
&lt;h2 id="api-concepts"&gt;API Concepts&lt;/h2&gt;
&lt;p&gt;View the &lt;a href="https://open-cluster-management.io/docs/getting-started/integration/policy-controllers/policy/"&gt;Policy API&lt;/a&gt; page for additional details about the Policy API managed by the Policy Framework
components, including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://open-cluster-management.io/docs/getting-started/integration/policy-controllers/policy/#policy"&gt;&lt;code&gt;Policy&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://open-cluster-management.io/docs/getting-started/integration/policy-controllers/policy/#policyset"&gt;&lt;code&gt;PolicySet&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://open-cluster-management.io/docs/getting-started/integration/policy-controllers/policy/#placementbinding"&gt;&lt;code&gt;PlacementBinding&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="architecture"&gt;Architecture&lt;/h2&gt;
&lt;div style="text-align: center; padding: 20px;"&gt;
 &lt;img src="https://open-cluster-management.io/policy-framework-architecture-diagram.png" alt="Policy framework architecture" style="margin: 0 auto; width: 80%"&gt;
&lt;/div&gt;
&lt;p&gt;The governance policy framework distributes policies to managed clusters and collects results to send back to the hub
cluster.&lt;/p&gt;</description></item><item><title>Pushing Kubernetes API requests to the managed clusters</title><link>https://open-cluster-management.io/docs/scenarios/pushing-kube-api-requests/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/docs/scenarios/pushing-kube-api-requests/</guid><description>&lt;p&gt;By following the instructions in this document, an OCM hub admin will be able
to &amp;ldquo;push&amp;rdquo; Kubernetes API requests to the managed clusters. The benefit of using
this method for &amp;ldquo;pushing&amp;rdquo; requests in OCM is that we don&amp;rsquo;t need to explicitly
configure any API endpoint for the managed clusters or provide any client
credentials as preparation. We just need to enable/install the following OCM
addons:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/open-cluster-management-io/cluster-proxy"&gt;Cluster-Proxy&lt;/a&gt;:
Setting up the &lt;a href="https://kubernetes.io/docs/tasks/extend-kubernetes/setup-konnectivity/"&gt;konnectivity&lt;/a&gt;
tunnels between the hub cluster and the managed clusters so the hub cluster
can connect/access the managed cluster from anywhere.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/open-cluster-management-io/managed-serviceaccount"&gt;Managed-ServiceAccount&lt;/a&gt;:
Automating the lifecycle of the local service account in the managed clusters
and projecting the tokens back to the hub cluster so that the Kubernetes API
clients from the hub can make authenticated requests.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oam-dev/cluster-gateway"&gt;Cluster-Gateway&lt;/a&gt;: An aggregated
apiserver providing a &amp;ldquo;proxy&amp;rdquo; subresource which helps the hub admin to
gracefully access the managed clusters by standard Kubernetes API calls
(including long-running calls).&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="prerequisite"&gt;Prerequisite&lt;/h2&gt;
&lt;p&gt;You must meet the following prerequisites to install the managed service
account:&lt;/p&gt;</description></item><item><title>Register a cluster to hub through proxy server</title><link>https://open-cluster-management.io/docs/scenarios/register-cluster-through-proxy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/docs/scenarios/register-cluster-through-proxy/</guid><description>&lt;p&gt;When registering a cluster to an Open Cluster Management (OCM) hub, there is a network requirement for the managed cluster. It must be able to reach the hub cluster. Sometimes the managed cluster cannot directly connect to the hub cluster. For example, the hub cluster is in a public cloud, and the managed cluster is in a private cloud environment behind firewalls. The communications out of the private cloud can only go through a HTTP or HTTPS proxy server.&lt;/p&gt;</description></item><item><title>Register CAPI Cluster</title><link>https://open-cluster-management.io/docs/scenarios/register-capi-cluster/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/docs/scenarios/register-capi-cluster/</guid><description>&lt;p&gt;&lt;a href="https://cluster-api.sigs.k8s.io/"&gt;Cluster API (CAPI)&lt;/a&gt; is a Kubernetes sub-project focused on providing declarative APIs and
tooling to simplify provisioning, upgrading, and operating multiple Kubernetes clusters. This document provides a guideline on how
to use the Cluster API project and the &lt;a href="https://open-cluster-management.io/"&gt;Open Cluster Management (OCM)&lt;/a&gt; project together.&lt;/p&gt;
&lt;h3 id="prerequisites"&gt;Prerequisites&lt;/h3&gt;
&lt;h4 id="initialize-cluster-api-management-plane"&gt;Initialize Cluster API Management Plane&lt;/h4&gt;
&lt;p&gt;Refer to the &lt;a href="https://cluster-api.sigs.k8s.io/"&gt;Cluster API (CAPI)&lt;/a&gt; official documentation to initialize the Cluster API management plane on the Hub cluster.&lt;/p&gt;
&lt;p&gt;You can create CAPI clusters after the Cluster API management plane is installed on the Hub cluster.&lt;/p&gt;</description></item><item><title>Start the control plane</title><link>https://open-cluster-management.io/docs/getting-started/installation/start-the-control-plane/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/docs/getting-started/installation/start-the-control-plane/</guid><description>&lt;h2 id="prerequisites"&gt;Prerequisites&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;The hub cluster should be &lt;code&gt;v1.19+&lt;/code&gt;.
(To run on hub cluster version between [&lt;code&gt;v1.16&lt;/code&gt;, &lt;code&gt;v1.18&lt;/code&gt;],
please manually enable feature gate &amp;ldquo;V1beta1CSRAPICompatibility&amp;rdquo;).&lt;/li&gt;
&lt;li&gt;Currently the bootstrap process relies on client authentication via CSR. Therefore, if your Kubernetes distributions (like &lt;a href="https://github.com/aws/containers-roadmap/issues/1856"&gt;EKS&lt;/a&gt;) don&amp;rsquo;t support it, you can:
&lt;ul&gt;
&lt;li&gt;follow &lt;a href="https://open-cluster-management.io/docs/getting-started/installation/running-on-eks/"&gt;this&lt;/a&gt; article to run OCM natively on EKS&lt;/li&gt;
&lt;li&gt;or choose the &lt;a href="https://github.com/open-cluster-management-io/multicluster-controlplane"&gt;multicluster-controlplane&lt;/a&gt; as the hub controlplane&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Ensure &lt;a href="https://kubernetes.io/docs/tasks/tools/install-kubectl"&gt;kubectl&lt;/a&gt; and &lt;a href="https://kubectl.docs.kubernetes.io/installation/kustomize/"&gt;kustomize&lt;/a&gt; are installed.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="network-requirements"&gt;Network requirements&lt;/h3&gt;
&lt;p&gt;Configure your network settings for the hub cluster to allow the following connections.&lt;/p&gt;</description></item><item><title>ManagedCluster</title><link>https://open-cluster-management.io/docs/concepts/cluster-inventory/managedcluster/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/docs/concepts/cluster-inventory/managedcluster/</guid><description>&lt;h2 id="what-is-managedcluster"&gt;What is ManagedCluster?&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;ManagedCluster&lt;/code&gt; is a cluster scoped API in the hub cluster representing the
registered or pending-for-acceptance Kubernetes clusters in OCM. The
&lt;a href="https://open-cluster-management.io/docs/getting-started/installation/register-a-cluster/"&gt;klusterlet agent&lt;/a&gt;
working in the managed cluster is expected to actively maintain/refresh the
status of the corresponding &lt;code&gt;ManagedCluster&lt;/code&gt; resource on the hub cluster.
On the other hand, removing the &lt;code&gt;ManagedCluster&lt;/code&gt; from the hub cluster indicates
the cluster is denied/exiled from the hub cluster. The following is the
introduction of how the cluster registration lifecycle works under the hood:&lt;/p&gt;</description></item><item><title>ManifestWorkReplicaSet</title><link>https://open-cluster-management.io/docs/concepts/work-distribution/manifestworkreplicaset/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/docs/concepts/work-distribution/manifestworkreplicaset/</guid><description>&lt;h2 id="what-is-manifestworkreplicaset"&gt;What is &lt;code&gt;ManifestWorkReplicaSet&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;ManifestWorkReplicaSet&lt;/code&gt; is an aggregator API that uses &lt;a href="https://open-cluster-management.io/docs/concepts/work-distribution/manifestwork/"&gt;ManifestWork&lt;/a&gt; and &lt;a href="https://open-cluster-management.io/docs/concepts/content-placement/placement/"&gt;Placement&lt;/a&gt; to automatically create &lt;code&gt;ManifestWork&lt;/code&gt; resources for clusters selected by &lt;code&gt;Placement&lt;/code&gt;. It simplifies multi-cluster workload distribution by eliminating the need to manually create individual ManifestWork resources for each target cluster.&lt;/p&gt;
&lt;h2 id="feature-enablement"&gt;Feature Enablement&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;ManifestWorkReplicaSet&lt;/code&gt; is in &lt;strong&gt;alpha release&lt;/strong&gt; and is not enabled by default. To enable this feature, you must configure the cluster-manager instance on the hub cluster.&lt;/p&gt;
&lt;p&gt;Edit the cluster-manager CR:&lt;/p&gt;</description></item><item><title>Policy API concepts</title><link>https://open-cluster-management.io/docs/getting-started/integration/policy-controllers/policy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/docs/getting-started/integration/policy-controllers/policy/</guid><description>&lt;h2 id="overview"&gt;Overview&lt;/h2&gt;
&lt;p&gt;The policy framework has the following API concepts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://open-cluster-management.io/docs/getting-started/integration/policy-controllers/policy/#managed-cluster-policy-controllers"&gt;&lt;em&gt;Policy Templates&lt;/em&gt;&lt;/a&gt; are the policies that perform a desired check or action on a managed cluster. For
example,
&lt;a href="https://open-cluster-management.io/docs/getting-started/integration/policy-controllers/#install-the-configuration-policy-controller"&gt;ConfigurationPolicy&lt;/a&gt;
objects are embedded in &lt;code&gt;Policy&lt;/code&gt; objects under the &lt;code&gt;policy-templates&lt;/code&gt; array.&lt;/li&gt;
&lt;li&gt;A &lt;a href="https://open-cluster-management.io/docs/getting-started/integration/policy-controllers/policy/#policy"&gt;&lt;code&gt;Policy&lt;/code&gt;&lt;/a&gt; is a grouping mechanism for &lt;em&gt;Policy Templates&lt;/em&gt; and is the smallest deployable unit on the hub
cluster. Embedded &lt;em&gt;Policy Templates&lt;/em&gt; are distributed to applicable managed clusters and acted upon by the appropriate
&lt;a href="https://open-cluster-management.io/docs/getting-started/integration/policy-controllers/"&gt;policy controller&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;A &lt;a href="https://open-cluster-management.io/docs/getting-started/integration/policy-controllers/policy/#policyset"&gt;&lt;code&gt;PolicySet&lt;/code&gt;&lt;/a&gt; is a grouping mechanism of &lt;code&gt;Policy&lt;/code&gt; objects. Compliance of all grouped &lt;code&gt;Policy&lt;/code&gt; objects is
summarized in the &lt;code&gt;PolicySet&lt;/code&gt;. A &lt;code&gt;PolicySet&lt;/code&gt; is a deployable unit and its distribution is controlled by a
&lt;a href="https://open-cluster-management.io/docs/concepts/content-placement/placement/"&gt;Placement&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;A &lt;a href="https://open-cluster-management.io/docs/getting-started/integration/policy-controllers/policy/#placementbinding"&gt;&lt;code&gt;PlacementBinding&lt;/code&gt;&lt;/a&gt; binds a &lt;a href="https://open-cluster-management.io/docs/concepts/content-placement/placement/"&gt;Placement&lt;/a&gt; to a &lt;code&gt;Policy&lt;/code&gt; or &lt;code&gt;PolicySet&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Additional resources:&lt;/strong&gt;&lt;/p&gt;</description></item><item><title>Register a cluster</title><link>https://open-cluster-management.io/docs/getting-started/installation/register-a-cluster/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/docs/getting-started/installation/register-a-cluster/</guid><description>&lt;p&gt;After the cluster manager is installed on the hub cluster, you need to install the klusterlet agent on another cluster so that it can be registered and managed by the hub cluster.&lt;/p&gt;
&lt;h2 id="prerequisites"&gt;Prerequisites&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;The managed clusters should be &lt;code&gt;v1.11+&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Ensure &lt;a href="https://kubernetes.io/docs/tasks/tools/install-kubectl"&gt;kubectl&lt;/a&gt; and &lt;a href="https://kubectl.docs.kubernetes.io/installation/kustomize/"&gt;kustomize&lt;/a&gt; are installed.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="network-requirements"&gt;Network requirements&lt;/h3&gt;
&lt;p&gt;Configure your network settings for the managed clusters to allow the following connections.&lt;/p&gt;
&lt;table&gt;
 &lt;thead&gt;
 &lt;tr&gt;
 &lt;th&gt;Direction&lt;/th&gt;
 &lt;th&gt;Endpoint&lt;/th&gt;
 &lt;th&gt;Protocol&lt;/th&gt;
 &lt;th&gt;Purpose&lt;/th&gt;
 &lt;th&gt;Used by&lt;/th&gt;
 &lt;/tr&gt;
 &lt;/thead&gt;
 &lt;tbody&gt;
 &lt;tr&gt;
 &lt;td&gt;Outbound&lt;/td&gt;
 &lt;td&gt;https://{hub-api-server-url}:{port}&lt;/td&gt;
 &lt;td&gt;TCP&lt;/td&gt;
 &lt;td&gt;Kubernetes API server of the hub cluster&lt;/td&gt;
 &lt;td&gt;OCM agents, including the add-on agents, running on the managed clusters&lt;/td&gt;
 &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;To use a proxy, please make sure the proxy server is well configured to allow the above connections and the proxy server is reachable for the managed clusters. See &lt;a href="https://open-cluster-management.io/docs/scenarios/register-cluster-through-proxy/"&gt;Register a cluster to hub through proxy server&lt;/a&gt; for more details.&lt;/p&gt;</description></item><item><title>Upgrading your OCM environment</title><link>https://open-cluster-management.io/docs/getting-started/administration/upgrading/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/docs/getting-started/administration/upgrading/</guid><description>&lt;p&gt;This page provides the suggested steps to upgrade your OCM environment
including both the hub cluster and the managed clusters. Overall the major
steps you should follow are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Read the release notes to confirm the latest OCM release version. &lt;em&gt;(Note that
some add-ons&amp;rsquo; version might be different from OCM&amp;rsquo;s overall release version.)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Upgrade your command line tools &lt;code&gt;clusteradm&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="before-you-begin"&gt;Before you begin&lt;/h2&gt;
&lt;p&gt;You must have an existing OCM environment and there&amp;rsquo;s supposed to be
registration-operator running in your clusters. The registration-operators
is supposed to be installed if you&amp;rsquo;re previously following our recommended
&lt;a href="https://open-cluster-management.io/docs/getting-started/quick-start/"&gt;quick start guide&lt;/a&gt;
to set up your OCM. The operator is responsible for helping you upgrade the
other components on ease.&lt;/p&gt;</description></item><item><title>Add-on management</title><link>https://open-cluster-management.io/docs/getting-started/installation/addon-management/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/docs/getting-started/installation/addon-management/</guid><description>&lt;h2 id="add-on-enablement"&gt;Add-on enablement&lt;/h2&gt;
&lt;p&gt;From a user&amp;rsquo;s perspective, to install the addon to the hub cluster the hub admin
should register a globally-unique &lt;code&gt;ClusterManagementAddon&lt;/code&gt; resource as a singleton
placeholder in the hub cluster. For instance, the &lt;a href="https://github.com/open-cluster-management-io/addon-framework/tree/main/examples/helloworld"&gt;helloworld&lt;/a&gt;
add-on can be registered to the hub cluster by creating:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-yaml" data-lang="yaml"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#204a87;font-weight:bold"&gt;apiVersion&lt;/span&gt;&lt;span style="color:#000;font-weight:bold"&gt;:&lt;/span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt; &lt;/span&gt;&lt;span style="color:#000"&gt;addon.open-cluster-management.io/v1alpha1&lt;/span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt;&lt;/span&gt;&lt;span style="color:#204a87;font-weight:bold"&gt;kind&lt;/span&gt;&lt;span style="color:#000;font-weight:bold"&gt;:&lt;/span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt; &lt;/span&gt;&lt;span style="color:#000"&gt;ClusterManagementAddOn&lt;/span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt;&lt;/span&gt;&lt;span style="color:#204a87;font-weight:bold"&gt;metadata&lt;/span&gt;&lt;span style="color:#000;font-weight:bold"&gt;:&lt;/span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt; &lt;/span&gt;&lt;span style="color:#204a87;font-weight:bold"&gt;name&lt;/span&gt;&lt;span style="color:#000;font-weight:bold"&gt;:&lt;/span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt; &lt;/span&gt;&lt;span style="color:#000"&gt;helloworld&lt;/span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt;&lt;/span&gt;&lt;span style="color:#204a87;font-weight:bold"&gt;spec&lt;/span&gt;&lt;span style="color:#000;font-weight:bold"&gt;:&lt;/span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt; &lt;/span&gt;&lt;span style="color:#204a87;font-weight:bold"&gt;addOnMeta&lt;/span&gt;&lt;span style="color:#000;font-weight:bold"&gt;:&lt;/span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt; &lt;/span&gt;&lt;span style="color:#204a87;font-weight:bold"&gt;displayName&lt;/span&gt;&lt;span style="color:#000;font-weight:bold"&gt;:&lt;/span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt; &lt;/span&gt;&lt;span style="color:#000"&gt;helloworld&lt;/span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id="enable-the-add-on-manually"&gt;Enable the add-on manually&lt;/h3&gt;
&lt;p&gt;The addon manager running on the hub is taking responsibility of configuring the
installation of addon agents for each managed cluster. When a user wants to enable
the add-on for a certain managed cluster, the user should create a
&lt;code&gt;ManagedClusterAddOn&lt;/code&gt; resource on the cluster namespace. The name of the
&lt;code&gt;ManagedClusterAddOn&lt;/code&gt; should be the same name of the corresponding
&lt;code&gt;ClusterManagementAddon&lt;/code&gt;. For instance, the following example enables &lt;code&gt;helloworld&lt;/code&gt;
add-on in &amp;ldquo;cluster1&amp;rdquo;:&lt;/p&gt;</description></item><item><title>Configuration Policy</title><link>https://open-cluster-management.io/docs/getting-started/integration/policy-controllers/configuration-policy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/docs/getting-started/integration/policy-controllers/configuration-policy/</guid><description>&lt;p&gt;The &lt;code&gt;ConfigurationPolicy&lt;/code&gt; defines Kubernetes manifests to compare with objects that currently exist on the cluster. The
Configuration policy controller is provided by Open Cluster Management and runs on managed clusters.&lt;/p&gt;
&lt;p&gt;View the &lt;a href="https://open-cluster-management.io/docs/getting-started/integration/policy-controllers/policy/#managed-cluster-policy-controllers"&gt;Policy API concepts&lt;/a&gt; page to learn more
about the &lt;code&gt;ConfigurationPolicy&lt;/code&gt; API.&lt;/p&gt;
&lt;h2 id="prerequisites"&gt;Prerequisites&lt;/h2&gt;
&lt;p&gt;You must meet the following prerequisites to install the configuration policy controller:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Ensure &lt;a href="https://kubernetes.io/docs/tasks/tools/install-kubectl"&gt;&lt;code&gt;kubectl&lt;/code&gt;&lt;/a&gt; and
&lt;a href="https://kubectl.docs.kubernetes.io/installation/kustomize/"&gt;&lt;code&gt;kustomize&lt;/code&gt;&lt;/a&gt; are installed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ensure &lt;a href="https://golang.org/doc/install"&gt;Golang&lt;/a&gt; is installed, if you are planning to install from the source.&lt;/p&gt;</description></item><item><title>Feature Gates</title><link>https://open-cluster-management.io/docs/getting-started/administration/featuregates/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/docs/getting-started/administration/featuregates/</guid><description>&lt;p&gt;Feature gates are a way to enable or disable experimental or optional features in Open Cluster Management (OCM). They provide a safe mechanism to gradually roll out new functionality and maintain backward compatibility.&lt;/p&gt;
&lt;h2 id="overview"&gt;Overview&lt;/h2&gt;
&lt;p&gt;OCM uses Kubernetes&amp;rsquo; feature gate mechanism to control the availability of features across different components:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Hub Components&lt;/strong&gt;: Features running on the hub cluster&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Spoke Components&lt;/strong&gt;: Features running on managed clusters&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Feature gates follow a standard lifecycle:&lt;/p&gt;</description></item><item><title>ManagedClusterSet</title><link>https://open-cluster-management.io/docs/concepts/cluster-inventory/managedclusterset/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/docs/concepts/cluster-inventory/managedclusterset/</guid><description>&lt;p&gt;&lt;strong&gt;API-CHANGE NOTE&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;ManagedClusterSet&lt;/code&gt; and &lt;code&gt;ManagedClusterSetBinding&lt;/code&gt; API v1beta1 version will no longer be served in OCM v0.12.0.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Migrate manifests and API clients to use the &lt;code&gt;ManagedClusterSet&lt;/code&gt; and &lt;code&gt;ManagedClusterSetBinding&lt;/code&gt; API v1beta2 version, available since OCM v0.9.0.&lt;/li&gt;
&lt;li&gt;All existing persisted objects are accessible via the new API.&lt;/li&gt;
&lt;li&gt;Notable changes:
&lt;ul&gt;
&lt;li&gt;The default cluster selector type will be &lt;code&gt;ExclusiveClusterSetLabel&lt;/code&gt; in v1beta2, and type &lt;code&gt;LegacyClusterSetLabel&lt;/code&gt; in v1beta1 is removed.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="what-is-managedclusterset"&gt;What is ManagedClusterSet?&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;ManagedClusterSet&lt;/code&gt; is a cluster-scoped API in the hub cluster for grouping a
few managed clusters into a &amp;ldquo;set&amp;rdquo; so that hub admin can operate these clusters
altogether in a higher level. The concept is inspired by the &lt;a href="https://github.com/kubernetes/enhancements/tree/master/keps/sig-multicluster/1645-multi-cluster-services-api#terminology"&gt;enhancement&lt;/a&gt;
from the Kubernetes SIG-Multicluster. Member clusters in the set are supposed
to have common/similar attributes e.g. purpose of use, deployed regions, etc.&lt;/p&gt;</description></item><item><title>Open Policy Agent Gatekeeper</title><link>https://open-cluster-management.io/docs/getting-started/integration/policy-controllers/gatekeeper/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/docs/getting-started/integration/policy-controllers/gatekeeper/</guid><description>&lt;p&gt;&lt;a href="https://open-policy-agent.github.io/gatekeeper/website/"&gt;Gatekeeper&lt;/a&gt; is a validating webhook with auditing capabilities
that can enforce custom resource definition-based policies that are run with the Open Policy Agent (OPA). Gatekeeper
constraints can be used to evaluate Kubernetes resource compliance. You can leverage OPA as the policy engine, and use
Rego as the policy language.&lt;/p&gt;
&lt;h2 id="installing-gatekeeper"&gt;Installing Gatekeeper&lt;/h2&gt;
&lt;p&gt;See the &lt;a href="https://open-policy-agent.github.io/gatekeeper/website/docs/install"&gt;Gatekeeper documentation&lt;/a&gt; to install the
desired version of Gatekeeper to the managed cluster.&lt;/p&gt;
&lt;h2 id="sample-gatekeeper-policy"&gt;Sample Gatekeeper policy&lt;/h2&gt;
&lt;p&gt;Gatekeeper policies are written using constraint templates and constraints. View the following YAML examples that use
Gatekeeper constraints in an OCM &lt;code&gt;Policy&lt;/code&gt;:&lt;/p&gt;</description></item><item><title>Running on EKS</title><link>https://open-cluster-management.io/docs/getting-started/installation/running-on-eks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/docs/getting-started/installation/running-on-eks/</guid><description>&lt;p&gt;Use this solution to use AWS EKS cluster as a hub. This solution uses AWS IAM roles for authentication,
hence only Managed Clusters running on EKS will be able to use this solution.&lt;/p&gt;
&lt;p&gt;Refer &lt;a href="https://github.com/open-cluster-management-io/ocm/tree/main/solutions/joining-hub-and-spoke-with-aws-auth"&gt;this&lt;/a&gt;
article for detailed registration instructions.&lt;/p&gt;</description></item><item><title>Add-on Developer Guide</title><link>https://open-cluster-management.io/docs/developer-guides/addon/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/docs/developer-guides/addon/</guid><description>&lt;p&gt;This page is a developer guide about how to build an OCM add-on using addon-framework.&lt;/p&gt;
&lt;h2 id="supported-version"&gt;Supported version&lt;/h2&gt;
&lt;p&gt;The OCM v1.0.0 requires addon-framework v0.9.3 and above versions.&lt;/p&gt;
&lt;p&gt;And notice there&amp;rsquo;s breaking changes in &lt;a href="https://open-cluster-management.io/docs/developer-guides/addon/#automatic-installation"&gt;automatic installation&lt;/a&gt; in addon-framework version v0.10.0.&lt;/p&gt;
&lt;h2 id="overview"&gt;Overview&lt;/h2&gt;
&lt;p&gt;Add-on is an extension which can work with multiple clusters based on the foundation components in open-cluster-management.
Add-ons are Open Cluster Management-based extensions that can be used to work with multiple clusters.
Add-ons can support different configurations for different managed clusters, and can also be used to read data from the hub cluster.
For example, you might use the &lt;a href="https://github.com/open-cluster-management-io/managed-serviceaccount"&gt;managed-serviceaccount&lt;/a&gt; add-on to collect the tokens from managed cluster back to the hub cluster,
use the &lt;a href="https://github.com/open-cluster-management-io/cluster-proxy"&gt;cluster-proxy &lt;/a&gt; addon to establish a reverse proxy tunnels from the managed cluster to the hub cluster, etc.&lt;/p&gt;</description></item><item><title>Application lifecycle management</title><link>https://open-cluster-management.io/docs/getting-started/integration/app-lifecycle/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/docs/getting-started/integration/app-lifecycle/</guid><description>&lt;p&gt;After the setup of Open Cluster Management (OCM) hub and managed clusters,
you could install the OCM built-in application management add-on.
The OCM application management add-on leverages the
&lt;a href="https://argo-cd.readthedocs.io/"&gt;Argo CD&lt;/a&gt;
to provide declarative GitOps based application lifecycle management across multiple Kubernetes clusters.&lt;/p&gt;
&lt;h2 id="architecture"&gt;Architecture&lt;/h2&gt;
&lt;p&gt;Traditional Argo CD resource delivery primarily uses a push model,
where resources are deployed from a centralized Argo CD instance to remote or managed clusters.&lt;/p&gt;
&lt;div style="text-align: center; padding: 20px;"&gt;
 &lt;img src="https://github.com/open-cluster-management-io/argocd-pull-integration/raw/main/assets/push.png" alt="Argo CD Push Model" style="margin: 0 auto; width: 80%"&gt;
&lt;/div&gt;
&lt;p&gt;With the OCM Argo CD add-on, users can leverage a pull based resource delivery model,
where managed clusters pull and apply application configurations.&lt;/p&gt;</description></item><item><title>Cluster proxy</title><link>https://open-cluster-management.io/docs/getting-started/integration/cluster-proxy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/docs/getting-started/integration/cluster-proxy/</guid><description>&lt;p&gt;&lt;a href="https://github.com/open-cluster-management-io/cluster-proxy"&gt;Cluster proxy&lt;/a&gt;
is an OCM addon providing L4 network connectivity from hub cluster to
the managed clusters without &lt;strong&gt;any additional requirement&lt;/strong&gt; to the managed
cluster&amp;rsquo;s network infrastructure by leveraging the Kubernetes official SIG
sub-project &lt;a href="https://github.com/kubernetes-sigs/apiserver-network-proxy"&gt;apiserver-network-proxy&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="background"&gt;Background&lt;/h2&gt;
&lt;p&gt;The original architecture of OCM allows a cluster from anywhere to be
registered and managed by OCM&amp;rsquo;s control plane (i.e. the hub cluster)
as long as a &lt;a href="https://open-cluster-management.io/docs/getting-started/installation/register-a-cluster/"&gt;klusterlet agent&lt;/a&gt;
can reach hub cluster&amp;rsquo;s endpoint. So the minimal requirement for the
managed cluster&amp;rsquo;s network infrastructure in OCM is &amp;ldquo;klusterlet -&amp;gt; hub&amp;rdquo;
connectivity. However, there are still some cases where the components
in the hub cluster hope to proactively dail/request the services in the
managed clusters which will need the &amp;ldquo;hub -&amp;gt; klusterlet&amp;rdquo; connectivity on
the other hand. In addition to that, the cases can be even more complex
when each of the managed clusters are not in the same network.&lt;/p&gt;</description></item><item><title>Managed service account</title><link>https://open-cluster-management.io/docs/getting-started/integration/managed-serviceaccount/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/docs/getting-started/integration/managed-serviceaccount/</guid><description>&lt;p&gt;&lt;a href="https://github.com/open-cluster-management-io/managed-serviceaccount"&gt;Managed Service Account&lt;/a&gt;
is an OCM addon enabling a hub cluster admin to manage &lt;a href="https://kubernetes.io/docs/reference/access-authn-authz/service-accounts-admin/"&gt;service account&lt;/a&gt;
across multiple clusters on ease. By controlling the creation and removal of
the service account, the addon agent will project and rotate the corresponding
token back to the hub cluster which is very useful for the Kube API client from
the hub cluster to request against the managed clusters.&lt;/p&gt;
&lt;h2 id="background"&gt;Background&lt;/h2&gt;
&lt;p&gt;Normally there are two major approaches for a Kube API client to authenticate
and access a Kubernetes cluster:&lt;/p&gt;</description></item><item><title>Multicluster Control Plane</title><link>https://open-cluster-management.io/docs/getting-started/integration/multicluster-controlplane/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/docs/getting-started/integration/multicluster-controlplane/</guid><description>&lt;h2 id="what-is-multicluster-control-plane"&gt;What is &lt;code&gt;Multicluster Control Plane&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;The multicluster control plane is a lightweight Open Cluster Manager (OCM) control plane that is easy to install and has a small footprint. It can be running anywhere with or without a Kubernetes environment to serve the OCM control plane capabilities.&lt;/p&gt;
&lt;h2 id="why-use-multicluster-control-plane"&gt;Why use &lt;code&gt;Multicluster Control Plane&lt;/code&gt;&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Some Kubernetes environments do not have CSR (e.g., EKS) so that the standard OCM control plane cannot be installed. The multicluster control plane can be able to install in these environments and expose the OCM control plane API via loadbalancer.&lt;/p&gt;</description></item><item><title>VScode Extension</title><link>https://open-cluster-management.io/docs/developer-guides/vscode-extension/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/docs/developer-guides/vscode-extension/</guid><description>&lt;p&gt;The OCM &lt;a href="https://github.com/open-cluster-management-io/ocm-vscode-extension"&gt;VScode Extension&lt;/a&gt; is a UI tool for OCM related Kubernetes resources.
The extension has been built upon Visual Studio Code and offers additional OCM administrative and monitoring features in order to improve operational efficiency and accelerate development within engineering teams.
The OCM VScode Extension provides tons of useful features, including easy to generate OCM related Kubernetes resources, automated local OCM environment creation and a simple and convenient monitoring view for cluster resources.
Having an effective UI tool for managing your cluster is key to a healthy environment. With the right user interface, you can administer changes to the cluster, track resources, and troubleshoot issues more efficiently, without having to use numerous additional CLI tools.&lt;/p&gt;</description></item><item><title>FleetConfig Controller</title><link>https://open-cluster-management.io/docs/getting-started/integration/fleetconfig-controller/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/docs/getting-started/integration/fleetconfig-controller/</guid><description>&lt;h2 id="what-is-the-fleetconfig-controller"&gt;What is the &lt;code&gt;FleetConfig Controller&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;The (&lt;a href="https://github.com/open-cluster-management-io/lab/tree/main/fleetconfig-controller"&gt;https://github.com/open-cluster-management-io/lab/tree/main/fleetconfig-controller&lt;/a&gt;) introduces 2 new custom resources to the OCM ecosystem: &lt;code&gt;Hub&lt;/code&gt; and &lt;code&gt;Spoke&lt;/code&gt; . It reconciles &lt;code&gt;Hub&lt;/code&gt; and &lt;code&gt;Spoke&lt;/code&gt; resources to declaratively manage the lifecycle of Open Cluster Management (OCM) multi-clusters.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;fleetconfig-controller&lt;/code&gt; will initialize an OCM hub and one or more spoke clusters; add, remove, and upgrade clustermanagers and klusterlets when their bundle versions change, manage their feature gates, and uninstall all OCM components properly whenever a &lt;code&gt;Hub&lt;/code&gt; or &lt;code&gt;Spoke&lt;/code&gt; is deleted.&lt;/p&gt;</description></item><item><title>Roadmap</title><link>https://open-cluster-management.io/docs/roadmap/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/docs/roadmap/</guid><description>&lt;p&gt;The Open Cluster Management community uses &lt;a href="https://github.com/orgs/open-cluster-management-io/projects/2/views/9"&gt;GitHub Project&lt;/a&gt; to track the progress of the project.&lt;/p&gt;</description></item><item><title>Open Cluster Management 社区诚邀您共赴 KubeCon China 2025 探讨多集群管理新未来</title><link>https://open-cluster-management.io/blog/2025/open-cluster-management-%E7%A4%BE%E5%8C%BA%E8%AF%9A%E9%82%80%E6%82%A8%E5%85%B1%E8%B5%B4-kubecon-china-2025-%E6%8E%A2%E8%AE%A8%E5%A4%9A%E9%9B%86%E7%BE%A4%E7%AE%A1%E7%90%86%E6%96%B0%E6%9C%AA%E6%9D%A5/</link><pubDate>Thu, 22 May 2025 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/blog/2025/open-cluster-management-%E7%A4%BE%E5%8C%BA%E8%AF%9A%E9%82%80%E6%82%A8%E5%85%B1%E8%B5%B4-kubecon-china-2025-%E6%8E%A2%E8%AE%A8%E5%A4%9A%E9%9B%86%E7%BE%A4%E7%AE%A1%E7%90%86%E6%96%B0%E6%9C%AA%E6%9D%A5/</guid><description>&lt;p&gt;KubeCon + CloudNativeCon China 2025 即将于6 月 10-11 日在香港盛大举行，这是云原生领域最具影响力的技术盛会之一。作为云原生多集群管理领域的领军项目之一，Open Cluster Management (OCM) 社区将带来三个精彩议题，与您共同探讨多集群管理领域的最新创新和突破。在这里，您将有机会与来自全球的云原生专家面对面交流，深入了解 OCM 如何通过创新的技术方案，帮助企业应对日益复杂的多集群管理挑战，开启云原生多集群管理的新篇章。&lt;/p&gt;
&lt;img src="./assets/kubecon2025cn.jpg" alt="KubeCon China 2025 Banner" width="80%" style="display: block; margin: 0;"&gt;
&lt;h2 id="议题信息"&gt;议题信息&lt;/h2&gt;
&lt;h3 id="闪电演讲使用ocm-addon简化多集群集成"&gt;&lt;a href="https://kccncchn2025.sched.com/event/1xjzH/project-lightning-talk-simplifying-multi-cluster-integrations-with-ocm-addon-jian-zhu-maintainer?iframe=no&amp;amp;w=100%25&amp;amp;sidebar=yes&amp;amp;bg=no"&gt;闪电演讲：使用OCM Addon简化多集群集成&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;时间&lt;/strong&gt;：6 月 10 日 11:42 - 11:47 HKT&lt;br&gt;
&lt;strong&gt;地点&lt;/strong&gt;：Level 16 | Grand Ballroom I&lt;br&gt;
&lt;strong&gt;演讲者&lt;/strong&gt;：Jian Zhu (Red Hat)&lt;/p&gt;
&lt;p&gt;在这个闪电演讲中，Jian Zhu 将介绍 OCM 的 Addon 机制，展示如何通过简单的 YAML 文件实现多集群能力的扩展。主要内容包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OCM Addon 机制概述及其在多集群环境中的作用&lt;/li&gt;
&lt;li&gt;项目集成案例：以 Fluid 为例，展示如何通过 Addon 增强多集群管理能力&lt;/li&gt;
&lt;li&gt;AddonTemplate API：简化 addon 创建和管理的创新方案&lt;/li&gt;
&lt;li&gt;实际应用价值：展示 OCM Addons 的效率和可扩展性&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="解锁-cel-在多集群调度中的强大能力"&gt;&lt;a href="https://kccncchn2025.sched.com/event/1x5jG/unlocking-the-power-of-cel-for-advanced-multi-cluster-scheduling-qing-hao-jian-qiu-red-hat?iframe=no&amp;amp;w=100%25&amp;amp;sidebar=yes&amp;amp;bg=no"&gt;解锁 CEL 在多集群调度中的强大能力&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;时间&lt;/strong&gt;：6 月 10 日 17:00 - 17:30 HKT&lt;br&gt;
&lt;strong&gt;地点&lt;/strong&gt;：Level 19 | Crystal Court II&lt;br&gt;
&lt;strong&gt;演讲者&lt;/strong&gt;：Qing Hao (Red Hat)&lt;/p&gt;</description></item><item><title>Joining OCM Hub and Spoke using AWS IRSA authentication</title><link>https://open-cluster-management.io/blog/2024/joining-ocm-hub-and-spoke-using-aws-irsa-authentication/</link><pubDate>Mon, 02 Dec 2024 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/blog/2024/joining-ocm-hub-and-spoke-using-aws-irsa-authentication/</guid><description>&lt;p&gt;Refer &lt;a href="https://github.com/open-cluster-management-io/ocm/tree/main/solutions/joining-hub-and-spoke-with-aws-auth"&gt;this&lt;/a&gt; solution.&lt;/p&gt;</description></item><item><title>KubeCon NA 2024 - Scheduling AI Workload Among Multiple Clusters</title><link>https://open-cluster-management.io/blog/2024/kubecon-na-2024-scheduling-ai-workload-among-multiple-clusters/</link><pubDate>Tue, 12 Nov 2024 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/blog/2024/kubecon-na-2024-scheduling-ai-workload-among-multiple-clusters/</guid><description>&lt;p&gt;Read more at &lt;a href="https://kccncna2024.sched.com/event/1iW9B/open-cluster-management-scheduling-ai-workload-among-multiple-clusters-project-lightning-talk"&gt;KubeCon NA 2024 - Open Cluster Management: Scheduling AI Workload Among Multiple Clusters | Project Lightning Talk&lt;/a&gt; |
&lt;a href="https://www.youtube.com/watch?v=bZrjMEzX0rU"&gt;video&lt;/a&gt;.&lt;/p&gt;</description></item><item><title>KubeDay Australia 2024 - Open Sourcing the Open Cluster Management Project and the Lessons We Can Learn for AI</title><link>https://open-cluster-management.io/blog/2024/kubeday-australia-2024-open-sourcing-the-open-cluster-management-project-and-the-lessons-we-can-learn-for-ai/</link><pubDate>Tue, 15 Oct 2024 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/blog/2024/kubeday-australia-2024-open-sourcing-the-open-cluster-management-project-and-the-lessons-we-can-learn-for-ai/</guid><description>&lt;p&gt;Read more at &lt;a href="https://kubedayaustralia2024.sched.com/event/1hAUw/open-sourcing-the-open-cluster-management-project-and-the-lessons-we-can-learn-for-ai-august-simonelli-red-hat"&gt;KubeDay Australia 2024 - Open Sourcing the Open Cluster Management Project and the Lessons We Can Learn for AI&lt;/a&gt; |
&lt;a href="https://www.youtube.com/watch?v=SLmJ6yJ6lAI"&gt;video&lt;/a&gt;.&lt;/p&gt;</description></item><item><title>KubeCon CN 2024 - Boundaryless Computing: Optimizing LLM Performance, Cost, and Efficiency in Multi-Cloud Architecture | 无边界计算：在多云架构中优化LLM性能、成本和效率</title><link>https://open-cluster-management.io/blog/2024/kubecon-cn-2024-boundaryless-computing-optimizing-llm-performance-cost-and-efficiency-in-multi-cloud-architecture-%E6%97%A0%E8%BE%B9%E7%95%8C%E8%AE%A1%E7%AE%97%E5%9C%A8%E5%A4%9A%E4%BA%91%E6%9E%B6%E6%9E%84%E4%B8%AD%E4%BC%98%E5%8C%96llm%E6%80%A7%E8%83%BD%E6%88%90%E6%9C%AC%E5%92%8C%E6%95%88%E7%8E%87/</link><pubDate>Wed, 21 Aug 2024 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/blog/2024/kubecon-cn-2024-boundaryless-computing-optimizing-llm-performance-cost-and-efficiency-in-multi-cloud-architecture-%E6%97%A0%E8%BE%B9%E7%95%8C%E8%AE%A1%E7%AE%97%E5%9C%A8%E5%A4%9A%E4%BA%91%E6%9E%B6%E6%9E%84%E4%B8%AD%E4%BC%98%E5%8C%96llm%E6%80%A7%E8%83%BD%E6%88%90%E6%9C%AC%E5%92%8C%E6%95%88%E7%8E%87/</guid><description>&lt;p&gt;Read more at &lt;a href="https://kccncossaidevchn2024.sched.com/event/1eYXG/boundaryless-computing-optimizing-llm-performance-cost-and-efficiency-in-multi-cloud-architecture-yi-dui-dou-zhao-daepnano-llmxia-reyi-jian-zhu-red-hat-kai-zhang-alibaba-cloud-intelligence"&gt;KubeCon CN 2024 - Boundaryless Computing: Optimizing LLM Performance, Cost, and Efficiency in Multi-Cloud Architecture&lt;/a&gt;.&lt;/p&gt;</description></item><item><title>KubeCon CN 2024 - Connecting the Dots: Towards a Unified Multi-Cluster AI/ML Experience | 连接点：走向统一的多集群AI/ML体验</title><link>https://open-cluster-management.io/blog/2024/kubecon-cn-2024-connecting-the-dots-towards-a-unified-multi-cluster-ai/ml-experience-%E8%BF%9E%E6%8E%A5%E7%82%B9%E8%B5%B0%E5%90%91%E7%BB%9F%E4%B8%80%E7%9A%84%E5%A4%9A%E9%9B%86%E7%BE%A4ai/ml%E4%BD%93%E9%AA%8C/</link><pubDate>Wed, 21 Aug 2024 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/blog/2024/kubecon-cn-2024-connecting-the-dots-towards-a-unified-multi-cluster-ai/ml-experience-%E8%BF%9E%E6%8E%A5%E7%82%B9%E8%B5%B0%E5%90%91%E7%BB%9F%E4%B8%80%E7%9A%84%E5%A4%9A%E9%9B%86%E7%BE%A4ai/ml%E4%BD%93%E9%AA%8C/</guid><description>&lt;p&gt;Read more at &lt;a href="https://kccncossaidevchn2024.sched.com/event/1eYXc/connecting-the-dots-towards-a-unified-multi-cluster-aiml-experience-pu-daepyu-ni-zha-zhong-shi-aimlmo-qing-hao-redhat-chen-yu-microsoft"&gt;KubeCon CN 2024 - Connecting the Dots: Towards a Unified Multi-Cluster AI/ML Experience&lt;/a&gt;.&lt;/p&gt;</description></item><item><title>KubeCon CN 2024 - Extend Kubernetes to Edge Using Event-Based Transport | 使用基于事件的传输将Kubernetes扩展到边缘</title><link>https://open-cluster-management.io/blog/2024/kubecon-cn-2024-extend-kubernetes-to-edge-using-event-based-transport-%E4%BD%BF%E7%94%A8%E5%9F%BA%E4%BA%8E%E4%BA%8B%E4%BB%B6%E7%9A%84%E4%BC%A0%E8%BE%93%E5%B0%86kubernetes%E6%89%A9%E5%B1%95%E5%88%B0%E8%BE%B9%E7%BC%98/</link><pubDate>Wed, 21 Aug 2024 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/blog/2024/kubecon-cn-2024-extend-kubernetes-to-edge-using-event-based-transport-%E4%BD%BF%E7%94%A8%E5%9F%BA%E4%BA%8E%E4%BA%8B%E4%BB%B6%E7%9A%84%E4%BC%A0%E8%BE%93%E5%B0%86kubernetes%E6%89%A9%E5%B1%95%E5%88%B0%E8%BE%B9%E7%BC%98/</guid><description>&lt;p&gt;Read more at &lt;a href="https://kccncossaidevchn2024.sched.com/event/1eYX1/extend-kubernetes-to-edge-using-event-based-transport-zhi-27dzha-lian-kubernetesyi-sui-longlong-cao-meng-yan-red-hat"&gt;KubeCon CN 2024 - Extend Kubernetes to Edge Using Event-Based Transport&lt;/a&gt;.&lt;/p&gt;</description></item><item><title>The HA Hub clusters solution -- MultipleHubs</title><link>https://open-cluster-management.io/blog/2024/the-ha-hub-clusters-solution--multiplehubs/</link><pubDate>Sun, 11 Aug 2024 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/blog/2024/the-ha-hub-clusters-solution--multiplehubs/</guid><description>&lt;p&gt;The &lt;code&gt;MultipleHubs&lt;/code&gt; is a new feature in Open Cluster Management (OCM) that allows you to configure a list of bootstrap kubeconfigs of multiple hubs. This feature is designed to provide a high availability (HA) solution of hub clusters. In this blog, we will introduce the MultipleHubs feature and how to use it.&lt;/p&gt;
&lt;p&gt;The high availability of hub clusters means that if one hub cluster is down, the managed clusters can still communicate with other hub clusters. Users can also specify the hub cluster that the managed cluster should connect to by configuring the &lt;code&gt;ManagedCluster&lt;/code&gt; resource.&lt;/p&gt;</description></item><item><title>Using the GitOps way to deal with the upgrade challenges of multi-cluster tool chains</title><link>https://open-cluster-management.io/blog/2024/using-the-gitops-way-to-deal-with-the-upgrade-challenges-of-multi-cluster-tool-chains/</link><pubDate>Fri, 19 Jan 2024 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/blog/2024/using-the-gitops-way-to-deal-with-the-upgrade-challenges-of-multi-cluster-tool-chains/</guid><description>&lt;h2 id="upgrading-challenges-of-tool-chains-in-multi-cluster-environments"&gt;Upgrading challenges of tool chains in multi-cluster environments&lt;/h2&gt;
&lt;p&gt;Open Cluster Management (OCM) is a community-driven project focused on multicluster and multicloud scenarios for Kubernetes applications. It provides functions such as cluster registration, application and workload distribution, and scheduling. Add-on is an extension mechanism based on the foundation components provided by OCM, which allows applications in the Kubernetes ecosystem to be easily migrated to the OCM platform and has the ability to orchestrate and schedule across multiple clusters and multiple clouds. For example, Istio, Prometheus, and Submarine can be expanded to multiple clusters through Add-on. In a multi-cluster environment, how to upgrade the entire tool chain (such as Istio, Prometheus and other tools) gracefully and smoothly is a challenge we encounter in multi-cluster management. A failed upgrade of the tool chain can potentially render thousands of user workloads inaccessible. Therefore, finding an easy and safe upgrade solution across clusters becomes important.&lt;/p&gt;</description></item><item><title>Open Cluster Management - Configuring Your Kubernetes Fleet With the Policy Addon</title><link>https://open-cluster-management.io/blog/2023/open-cluster-management-configuring-your-kubernetes-fleet-with-the-policy-addon/</link><pubDate>Wed, 22 Nov 2023 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/blog/2023/open-cluster-management-configuring-your-kubernetes-fleet-with-the-policy-addon/</guid><description>&lt;p&gt;View the video at &lt;a href="https://www.youtube.com/watch?v=ZZH654t5YpI"&gt;YouTube&lt;/a&gt;.&lt;/p&gt;</description></item><item><title>以GitOps方式应对多集群工具链的升级挑战</title><link>https://open-cluster-management.io/blog/2023/%E4%BB%A5gitops%E6%96%B9%E5%BC%8F%E5%BA%94%E5%AF%B9%E5%A4%9A%E9%9B%86%E7%BE%A4%E5%B7%A5%E5%85%B7%E9%93%BE%E7%9A%84%E5%8D%87%E7%BA%A7%E6%8C%91%E6%88%98/</link><pubDate>Fri, 27 Oct 2023 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/blog/2023/%E4%BB%A5gitops%E6%96%B9%E5%BC%8F%E5%BA%94%E5%AF%B9%E5%A4%9A%E9%9B%86%E7%BE%A4%E5%B7%A5%E5%85%B7%E9%93%BE%E7%9A%84%E5%8D%87%E7%BA%A7%E6%8C%91%E6%88%98/</guid><description>&lt;h2 id="多集群环境下工具链的升级挑战"&gt;多集群环境下工具链的升级挑战&lt;/h2&gt;
&lt;p&gt;OCM（open-cluster-management）是一个专注于 Kubernetes 应用跨多集群和多云的管理平台，提供了集群的注册，应用和负载的分发，调度等基础功能。Add-on 插件是 OCM 提供的一种基于基础组件的扩展机制，可以让 Kubernetes 生态的应用很容易迁移到 OCM 平台上，拥有跨多集群多云的编排和调度的能力。如 Istio，Prometheus，Submarine 可以通过 Add-on 的方式扩展至多集群。在多集群环境中，如何优雅、平滑地升级整个工具链（比如 Istio、Prometheus 和其他工具）是我们在多集群管理中遇到的挑战，工具链的升级失败可能会导致数千个用户工作负载无法访问。因此，找到一种简单、安全的跨集群升级解决方案变得非常重要。&lt;/p&gt;
&lt;p&gt;本文我们将介绍 Open Cluster Management(OCM)如何将工具链升级视为配置文件的变更，使用户能够利用 Kustomize 或 GitOps 实现跨集群的无缝滚动/金丝雀升级。&lt;/p&gt;
&lt;p&gt;在正式开始前，首先介绍几个 OCM 中的概念。&lt;/p&gt;
&lt;h2 id="add-on-插件"&gt;add-on 插件&lt;/h2&gt;
&lt;p&gt;在 OCM 平台上，add-on 插件可以实现在不同托管集群（Spoke）上应用不同的配置，也可以实现从控制面（Hub）获取数据到 Spoke 集群上等功能。比如：你可以使用&lt;a href="https://github.com/open-cluster-management-io/managed-serviceaccount"&gt;managed-serviceaccount&lt;/a&gt;
插件在 Spoke 集群上将指定的 ServiceaCount 信息返回给 Hub 集群，可以使用&lt;a href="https://github.com/open-cluster-management-io/cluster-proxy"&gt;cluster-proxy&lt;/a&gt;插件建立一个从 spoke 到 hub 的反向代理通道。&lt;/p&gt;
&lt;p&gt;现阶段 OCM 社区已经有的一些 add-on：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/open-cluster-management-io/multicluster-mesh"&gt;Multicluster Mesh Addon&lt;/a&gt; 可用于管理（发现、部署和联合）OCM 中跨多个集群的服务网格。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/stolostron/submariner-addon"&gt;Submarine Addon&lt;/a&gt; 让&lt;a href="https://github.com/submariner-io/submariner"&gt;Submarine&lt;/a&gt;
和 OCM 方便集成，在 hub cluster 上部署 Submariner Broker，在 managed cluster 上部署所需的 Submariner 组件, 为托管集群提供跨集群的 Pod 和 Service 网络互相访问的能力。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/open-cluster-management-io/addon-contrib/tree/main/open-telemetry-addon"&gt;Open-telemetry add-on&lt;/a&gt; 自动在 hub cluster 和 managed cluster 上
安装 otelCollector，并在 hub cluster 上自动安装 jaeger-all-in-one 以处理和存储 traces。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://open-cluster-management.io/zh/getting-started/integration/app-lifecycle/"&gt;Application lifecycle management&lt;/a&gt;
实现多集群或多云环境中的应用程序生命周期管理。add-on 插件提供了一套通过 Subscriptions 订阅 channel，将 github 仓库，Helm release 或者对象存储仓库的应用分发到指定 Spoke 集群上的机制。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://open-cluster-management.io/getting-started/integration/policy-framework/"&gt;Policy framework&lt;/a&gt;和&lt;a href="https://open-cluster-management.io/getting-started/integration/policy-controllers/"&gt;Policy controllers&lt;/a&gt; add-on 插件可以让 Hub 集群管理员很轻松为 Spoke 集群部署安全相关的 policy 策略。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://open-cluster-management.io/getting-started/integration/managed-serviceaccount/"&gt;Managed service account&lt;/a&gt; add-on 插件可以让 Hub 集群管理员很容易管理 Spoke 集群上 serviceaccount。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://open-cluster-management.io/getting-started/integration/cluster-proxy/"&gt;Cluster proxy&lt;/a&gt; add-on 插件通过反向代理通道提供了 Hub 和 Spoke 集群之间 L4 网络连接。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;更多关于 add-on 插件的介绍可以参考&lt;a href="https://open-cluster-management.io/zh/blog/addon-introduction/"&gt;详解 OCM add-on 插件&lt;/a&gt;。&lt;/strong&gt;&lt;/p&gt;</description></item><item><title>详解OCM add-on插件</title><link>https://open-cluster-management.io/blog/2023/%E8%AF%A6%E8%A7%A3ocm-add-on%E6%8F%92%E4%BB%B6/</link><pubDate>Wed, 24 May 2023 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/blog/2023/%E8%AF%A6%E8%A7%A3ocm-add-on%E6%8F%92%E4%BB%B6/</guid><description>&lt;h2 id="ocm-add-on插件概述"&gt;OCM add-on插件概述&lt;/h2&gt;
&lt;p&gt;OCM （open-cluster-management）是一个专注于Kubernetes应用跨多集群和多云的管理平台，
提供了集群的注册，应用和负载的分发，调度等基础功能。Add-on插件是OCM提供的一种基于基础组建
的扩展机制，可以让Kubernetes生态的应用很容易迁移到OCM平台上，拥有跨多集群多云的编排和调度的能力。&lt;/p&gt;
&lt;p&gt;在OCM平台上，add-on插件可以实现不同被管理集群（Spoke）上应用的不同的配置，也可以实现从控制面（Hub）
获取数据到Spoke集群上等功能。比如：你可以使用&lt;a href="https://github.com/open-cluster-management-io/managed-serviceaccount"&gt;managed-serviceaccount&lt;/a&gt;
add-on插件在Spoke集群上将指定的ServiceaCount信息返回给Hub集群，可以使用&lt;a href="https://github.com/open-cluster-management-io/cluster-proxy"&gt;cluster-proxy&lt;/a&gt;
add-on插件建立一个从spoke到hub的反向代理通道。&lt;/p&gt;
&lt;p&gt;现阶段OCM社区已经有的一些add-on：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://open-cluster-management.io/zh/getting-started/integration/app-lifecycle/"&gt;Application lifecycle management&lt;/a&gt;
add-on插件提供了一套通过Subscriptions订阅channel，将github仓库，Helm release或者对象存储仓库的应用分发到指定Spoke集群上的机制。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://open-cluster-management.io/getting-started/integration/cluster-proxy/"&gt;Cluster proxy&lt;/a&gt; add-on插件通过反向代理通道提供了Hub和Spoke集群之间L4网络连接。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://open-cluster-management.io/getting-started/integration/managed-serviceaccount/"&gt;Managed service account&lt;/a&gt;
add-on插件可以让Hub集群管理员很容易管理Spoke集群上serviceaccount。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://open-cluster-management.io/getting-started/integration/policy-framework/"&gt;Policy framework&lt;/a&gt; 和
&lt;a href="https://open-cluster-management.io/getting-started/integration/policy-controllers/"&gt;Policy controllers&lt;/a&gt;
add-on插件可以让Hub集群管理员很轻松为Spoke集群部署安全相关的policy策略。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/stolostron/submariner-addon"&gt;Submarine Addon&lt;/a&gt; add-on插件可以让&lt;a href="https://github.com/submariner-io/submariner"&gt;Submarine&lt;/a&gt;
和OCM方便集成，为被管理集群提供跨集群的Pod和Service网络互相访问的能力。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/stolostron/multicluster-mesh-addon"&gt;Multicluster Mesh Addon&lt;/a&gt; add-on插件为OCM被管理集群提供了跨集群Service Mesh服务。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;本文将详细介绍add-on插件的实现机制。&lt;/p&gt;
&lt;h2 id="ocm-add-on-插件实现机制"&gt;OCM add-on 插件实现机制&lt;/h2&gt;
&lt;p&gt;通常情况下一个add-on插件包含2部分组成：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;Add-on Agent&lt;/code&gt; 是运行在Spoke集群上的任何Kubernetes资源，比如可以是一个有访问Hub权限的Pod，可以是一个Operator，等等。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Add-on Manager&lt;/code&gt; 是运行中Hub集群上的一个Kubernetes控制器。这个控制器可以通过&lt;a href="https://open-cluster-management.io/concepts/manifestwork/"&gt;ManifestWork&lt;/a&gt;
来给不同Spoke集群部署分发&lt;code&gt;Add-on Agent&lt;/code&gt;所需要的Kubernetes资源, 也可以管理&lt;code&gt;Add-on Agent&lt;/code&gt;所需要的权限等。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在OCM Hub集群上，关于add-on插件有2个主要的API：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;ClusterManagementAddOn&lt;/code&gt;: 这是一个cluster-scoped的API，每个add-on插件必须创建一个同名的实例用来描述add-on插件的名字
和描述信息，以及配置，安装部署策略等。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ManagedClusterAddOn&lt;/code&gt;: 这是一个namespace-scoped的API，部署到spoke集群的namespace下的和add-on同名的实例用来触发
&lt;code&gt;Add-on Agent&lt;/code&gt;安装部署到该Spoke集群。我们也可以通过这个API获取这个add-on插件的agent的健康状态信息。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Add-on 插件架构如下：&lt;/p&gt;
&lt;div style="text-align: center; padding: 20px;"&gt;
 &lt;img src="./assets/addon-architecture.png" alt="Addon Architecture" style="margin: 0 auto; width: 80%"&gt;
&lt;/div&gt;
&lt;p&gt;创建：&lt;/p&gt;</description></item><item><title>使用OCM让多集群调度更具可扩展性</title><link>https://open-cluster-management.io/blog/2023/%E4%BD%BF%E7%94%A8ocm%E8%AE%A9%E5%A4%9A%E9%9B%86%E7%BE%A4%E8%B0%83%E5%BA%A6%E6%9B%B4%E5%85%B7%E5%8F%AF%E6%89%A9%E5%B1%95%E6%80%A7/</link><pubDate>Wed, 10 May 2023 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/blog/2023/%E4%BD%BF%E7%94%A8ocm%E8%AE%A9%E5%A4%9A%E9%9B%86%E7%BE%A4%E8%B0%83%E5%BA%A6%E6%9B%B4%E5%85%B7%E5%8F%AF%E6%89%A9%E5%B1%95%E6%80%A7/</guid><description>&lt;h2 id="背景问题"&gt;背景问题&lt;/h2&gt;
&lt;p&gt;OCM Placement API 可以动态的在多集群环境中选择一组托管集群&lt;code&gt;ManagedCluster&lt;/code&gt;，以便将工作负载部署到这些集群上。&lt;/p&gt;
&lt;p&gt;在上一篇&lt;a href="https://mp.weixin.qq.com/s/_k2MV4b3hfTrLUCCOKOG8g"&gt;CNCF 沙箱项目 OCM Placement 多集群调度指南&lt;/a&gt;中，我们详细介绍了 Placement 的基本概念，提供的调度功能以及调度流程。同时还通过示例展示了如何在不同的应用场景下使用 Placement API。建议首次接触 Placement 的读者先阅读此文。&lt;/p&gt;
&lt;p&gt;Placement 提供了通过标签选择器&lt;code&gt;labelSelector&lt;/code&gt;或声明选择器&lt;code&gt;claimSelector&lt;/code&gt;过滤集群，同时也提供了一些内置的优选器&lt;code&gt;prioritizer&lt;/code&gt;，可对过滤后的集群进行打分排序和优先选择。
内置的&lt;code&gt;prioritizer&lt;/code&gt;中包括了最大可分配 CPU 资源(ResourceAllocatableCPU)和最大可分配内存资源(ResourceAllocatableMemory)，它们提供了根据集群的可分配 CPU 和内存进行调度的能力。但是，由于集群的&amp;quot;AllocatableCPU&amp;quot;和&amp;quot;AllocatableMemory&amp;quot;是静态值，即使&amp;quot;集群资源不足&amp;quot;，它们也不会改变。这导致在实际使用中，这两个&lt;code&gt;prioritizer&lt;/code&gt;不能满足基于实时可用 CPU 或内存进行调度的需求。此外，使用者还可能需要根据从集群中获取的资源监控数据进行调度，这些都是内置的&lt;code&gt;prioritizer&lt;/code&gt;无法满足的需求。&lt;/p&gt;
&lt;p&gt;以上这些需求要求 Placement 能够更灵活的根据第三方数据来进行调度。为此，我们实现了一种更具扩展性的方式来支持基于第三方数据的调度，使用者可以使用自定义的分数来选择集群。&lt;/p&gt;
&lt;p&gt;本文将介绍 OCM 是如何让多集群调度更具可扩展性，并通过实例展示如何实现一个第三方数据控制器&lt;code&gt;controller&lt;/code&gt;来扩展 OCM 的多集群调度功能。&lt;/p&gt;
&lt;h2 id="ocm-如何让调度具有可扩展性"&gt;OCM 如何让调度具有可扩展性&lt;/h2&gt;
&lt;p&gt;为了实现基于第三方数据的调度，OCM 引入了 API &lt;code&gt;AddOnPlacementScore&lt;/code&gt;，它支持存储自定义的集群分数，使用者可以在 Placement 中指定使用此分数选择集群。&lt;/p&gt;
&lt;p&gt;如下是一个&lt;code&gt;AddOnPlacementScore&lt;/code&gt;的例子，更多关于 API 的细节可访问&lt;a href="https://github.com/open-cluster-management-io/api/blob/main/cluster/v1alpha1/types_addonplacementscore.go" title="types_addonplacementscore.go"&gt;types_addonplacementscore.go&lt;/a&gt;。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-yaml" data-lang="yaml"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#204a87;font-weight:bold"&gt;apiVersion&lt;/span&gt;&lt;span style="color:#000;font-weight:bold"&gt;:&lt;/span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt; &lt;/span&gt;&lt;span style="color:#000"&gt;cluster.open-cluster-management.io/v1alpha1&lt;/span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt;&lt;/span&gt;&lt;span style="color:#204a87;font-weight:bold"&gt;kind&lt;/span&gt;&lt;span style="color:#000;font-weight:bold"&gt;:&lt;/span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt; &lt;/span&gt;&lt;span style="color:#000"&gt;AddOnPlacementScore&lt;/span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt;&lt;/span&gt;&lt;span style="color:#204a87;font-weight:bold"&gt;metadata&lt;/span&gt;&lt;span style="color:#000;font-weight:bold"&gt;:&lt;/span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt; &lt;/span&gt;&lt;span style="color:#204a87;font-weight:bold"&gt;name&lt;/span&gt;&lt;span style="color:#000;font-weight:bold"&gt;:&lt;/span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt; &lt;/span&gt;&lt;span style="color:#000"&gt;default&lt;/span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt; &lt;/span&gt;&lt;span style="color:#204a87;font-weight:bold"&gt;namespace&lt;/span&gt;&lt;span style="color:#000;font-weight:bold"&gt;:&lt;/span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt; &lt;/span&gt;&lt;span style="color:#000"&gt;cluster1&lt;/span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt;&lt;/span&gt;&lt;span style="color:#204a87;font-weight:bold"&gt;status&lt;/span&gt;&lt;span style="color:#000;font-weight:bold"&gt;:&lt;/span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt; &lt;/span&gt;&lt;span style="color:#204a87;font-weight:bold"&gt;conditions&lt;/span&gt;&lt;span style="color:#000;font-weight:bold"&gt;:&lt;/span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt; &lt;/span&gt;- &lt;span style="color:#204a87;font-weight:bold"&gt;lastTransitionTime&lt;/span&gt;&lt;span style="color:#000;font-weight:bold"&gt;:&lt;/span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt; &lt;/span&gt;&lt;span style="color:#4e9a06"&gt;&amp;#34;2021-10-28T08:31:39Z&amp;#34;&lt;/span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt; &lt;/span&gt;&lt;span style="color:#204a87;font-weight:bold"&gt;message&lt;/span&gt;&lt;span style="color:#000;font-weight:bold"&gt;:&lt;/span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt; &lt;/span&gt;&lt;span style="color:#000"&gt;AddOnPlacementScore updated successfully&lt;/span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt; &lt;/span&gt;&lt;span style="color:#204a87;font-weight:bold"&gt;reason&lt;/span&gt;&lt;span style="color:#000;font-weight:bold"&gt;:&lt;/span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt; &lt;/span&gt;&lt;span style="color:#000"&gt;AddOnPlacementScoreUpdated&lt;/span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt; &lt;/span&gt;&lt;span style="color:#204a87;font-weight:bold"&gt;status&lt;/span&gt;&lt;span style="color:#000;font-weight:bold"&gt;:&lt;/span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt; &lt;/span&gt;&lt;span style="color:#4e9a06"&gt;&amp;#34;True&amp;#34;&lt;/span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt; &lt;/span&gt;&lt;span style="color:#204a87;font-weight:bold"&gt;type&lt;/span&gt;&lt;span style="color:#000;font-weight:bold"&gt;:&lt;/span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt; &lt;/span&gt;&lt;span style="color:#000"&gt;AddOnPlacementScoreUpdated&lt;/span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt; &lt;/span&gt;&lt;span style="color:#204a87;font-weight:bold"&gt;validUntil&lt;/span&gt;&lt;span style="color:#000;font-weight:bold"&gt;:&lt;/span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt; &lt;/span&gt;&lt;span style="color:#4e9a06"&gt;&amp;#34;2021-10-29T18:31:39Z&amp;#34;&lt;/span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt; &lt;/span&gt;&lt;span style="color:#204a87;font-weight:bold"&gt;scores&lt;/span&gt;&lt;span style="color:#000;font-weight:bold"&gt;:&lt;/span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt; &lt;/span&gt;- &lt;span style="color:#204a87;font-weight:bold"&gt;name&lt;/span&gt;&lt;span style="color:#000;font-weight:bold"&gt;:&lt;/span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt; &lt;/span&gt;&lt;span style="color:#4e9a06"&gt;&amp;#34;cpuAvailable&amp;#34;&lt;/span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt; &lt;/span&gt;&lt;span style="color:#204a87;font-weight:bold"&gt;value&lt;/span&gt;&lt;span style="color:#000;font-weight:bold"&gt;:&lt;/span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt; &lt;/span&gt;&lt;span style="color:#0000cf;font-weight:bold"&gt;66&lt;/span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt; &lt;/span&gt;- &lt;span style="color:#204a87;font-weight:bold"&gt;name&lt;/span&gt;&lt;span style="color:#000;font-weight:bold"&gt;:&lt;/span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt; &lt;/span&gt;&lt;span style="color:#4e9a06"&gt;&amp;#34;memAvailable&amp;#34;&lt;/span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt; &lt;/span&gt;&lt;span style="color:#204a87;font-weight:bold"&gt;value&lt;/span&gt;&lt;span style="color:#000;font-weight:bold"&gt;:&lt;/span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt; &lt;/span&gt;&lt;span style="color:#0000cf;font-weight:bold"&gt;55&lt;/span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;AddOnPlacementScore&lt;/code&gt;的主要内容都在&lt;code&gt;status&lt;/code&gt;中，因为我们不希望使用者更新它。&lt;code&gt;AddOnPlacementScore&lt;/code&gt;的生命周期维护及&lt;code&gt;scores&lt;/code&gt;的更新应该由第三方&lt;code&gt;controller&lt;/code&gt;负责。&lt;/p&gt;</description></item><item><title>How to distribute workloads using Open Cluster Management</title><link>https://open-cluster-management.io/blog/2023/how-to-distribute-workloads-using-open-cluster-management/</link><pubDate>Thu, 19 Jan 2023 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/blog/2023/how-to-distribute-workloads-using-open-cluster-management/</guid><description>&lt;p&gt;Read more at &lt;a href="https://developers.redhat.com/articles/2023/01/19/how-distribute-workloads-using-open-cluster-management"&gt;Red Hat Developers&lt;/a&gt;.&lt;/p&gt;</description></item><item><title>KubeCon NA 2022 - OCM Multicluster App &amp; Config Management</title><link>https://open-cluster-management.io/blog/2022/kubecon-na-2022-ocm-multicluster-app-config-management/</link><pubDate>Wed, 26 Oct 2022 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/blog/2022/kubecon-na-2022-ocm-multicluster-app-config-management/</guid><description>&lt;p&gt;Read more at &lt;a href="https://open-cluster-management.io/kubecon-na-2022-ocm-multicluster-app-and-config-management.pdf"&gt;KubeCon NA 2022 - OCM Multicluster App &amp;amp; Config Management&lt;/a&gt;.&lt;/p&gt;</description></item><item><title>KubeCon NA 2022 - OCM Workload distribution with Placement API</title><link>https://open-cluster-management.io/blog/2022/kubecon-na-2022-ocm-workload-distribution-with-placement-api/</link><pubDate>Wed, 26 Oct 2022 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/blog/2022/kubecon-na-2022-ocm-workload-distribution-with-placement-api/</guid><description>&lt;p&gt;Read more at &lt;a href="https://open-cluster-management.io/kubecon-na-2022-ocm-workload-distribution-with-placement-api.pdf"&gt;KubeCon NA 2022 - OCM Workload distribution with Placement API&lt;/a&gt;.&lt;/p&gt;</description></item><item><title>Karmada and Open Cluster Management: two new approaches to the multicluster fleet management challenge</title><link>https://open-cluster-management.io/blog/2022/karmada-and-open-cluster-management-two-new-approaches-to-the-multicluster-fleet-management-challenge/</link><pubDate>Mon, 26 Sep 2022 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/blog/2022/karmada-and-open-cluster-management-two-new-approaches-to-the-multicluster-fleet-management-challenge/</guid><description>&lt;p&gt;Read more at &lt;a href="https://www.cncf.io/blog/2022/09/26/karmada-and-open-cluster-management-two-new-approaches-to-the-multicluster-fleet-management-challenge/"&gt;CNCF Blog&lt;/a&gt;.&lt;/p&gt;</description></item><item><title>Extending the Multicluster Scheduling Capabilities with Open Cluster Management Placement</title><link>https://open-cluster-management.io/blog/2022/extending-the-multicluster-scheduling-capabilities-with-open-cluster-management-placement/</link><pubDate>Thu, 15 Sep 2022 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/blog/2022/extending-the-multicluster-scheduling-capabilities-with-open-cluster-management-placement/</guid><description>&lt;p&gt;Read more at &lt;a href="https://cloud.redhat.com/blog/extending-the-multicluster-scheduling-capabilities-with-open-cluster-management-placement"&gt;Red Hat Cloud Blog&lt;/a&gt;.&lt;/p&gt;</description></item><item><title>详解ocm klusterlet秘钥管理机制</title><link>https://open-cluster-management.io/blog/2022/%E8%AF%A6%E8%A7%A3ocm-klusterlet%E7%A7%98%E9%92%A5%E7%AE%A1%E7%90%86%E6%9C%BA%E5%88%B6/</link><pubDate>Mon, 25 Apr 2022 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/blog/2022/%E8%AF%A6%E8%A7%A3ocm-klusterlet%E7%A7%98%E9%92%A5%E7%AE%A1%E7%90%86%E6%9C%BA%E5%88%B6/</guid><description>&lt;h2 id="概述"&gt;概述&lt;/h2&gt;
&lt;p&gt;在&lt;code&gt;open-cluster-management&lt;/code&gt;中，为了使控制面有更好的可扩展性，我们使用了&lt;code&gt;hub-spoke&lt;/code&gt;的架构：即集中的控制面（hub只
负责处理控制面的资源和数据而无需访问被管理的集群；每个被管理集群（spoke）运行一个称为&lt;code&gt;klusterlet&lt;/code&gt;的agent访问控制面获取
需要执行的任务。在这个过程中，&lt;code&gt;klusterlet&lt;/code&gt;需要拥有访问&lt;code&gt;hub&lt;/code&gt;集群的秘钥才能和&lt;code&gt;hub&lt;/code&gt;安全通信。确保秘钥的安全性是非常重要的，
因为如果这个秘钥被泄露的话有可能导致对hub集群的恶意访问或者窃取敏感信息，特别是当&lt;code&gt;ocm&lt;/code&gt;的被管理集群分布在不同的公有云中的时候。
为了保证秘钥的安全性，我们需要满足一些特定的需求：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;尽量避免秘钥在公有网络中的传输&lt;/li&gt;
&lt;li&gt;秘钥的刷新和废除&lt;/li&gt;
&lt;li&gt;细粒度的权限控制&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;本文将详细介绍&lt;code&gt;ocm&lt;/code&gt;是如何实现秘钥的管理来保证控制面板和被管理集群之间的安全访问的。&lt;/p&gt;
&lt;h2 id="架构和机制"&gt;架构和机制&lt;/h2&gt;
&lt;p&gt;在ocm中我们采用了以下几个机制来确保控制面和被管理集群之间访问的安全性：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;基于&lt;code&gt;CertificateSigniningRequest&lt;/code&gt;的mutual tls&lt;/li&gt;
&lt;li&gt;双向握手协议和动态&lt;code&gt;klusterlet&lt;/code&gt;ID&lt;/li&gt;
&lt;li&gt;认证和授权的分离&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="基于certificatesigniningrequest的mutual-tls"&gt;基于&lt;code&gt;CertificateSigniningRequest&lt;/code&gt;的mutual tls&lt;/h3&gt;
&lt;p&gt;使用&lt;code&gt;kubernetes&lt;/code&gt;的&lt;code&gt;CertificateSigniningRequest&lt;/code&gt;（&lt;a href="https://kubernetes.io/docs/reference/access-authn-authz/certificate-signing-requests/"&gt;CSR&lt;/a&gt;）API可以方便的生成客户认证证书。这个机制可以让&lt;code&gt;klusterlet&lt;/code&gt;在第一次
启动访问&lt;code&gt;hub&lt;/code&gt;集群时使用一个权限很小的秘钥来创建CSR。当CSR返回了生成的证书后，&lt;code&gt;klusterlet&lt;/code&gt;就可以用后续生成的带有更大访问权限的
证书来访问&lt;code&gt;hub&lt;/code&gt;集群。在使用csr的过程中，&lt;code&gt;klusterlet&lt;/code&gt;的私钥不会在网络中传输而是一直保存在被管理集群中；只有CSR的公钥和初始阶段需要的
小权限秘钥（bootstrap secret）会在不同集群间传输。这就最大程度的保证秘钥不会在传输过程中被泄露出去。&lt;/p&gt;
&lt;h3 id="双向握手协议和动态klusterletid"&gt;双向握手协议和动态&lt;code&gt;klusterlet&lt;/code&gt;ID&lt;/h3&gt;
&lt;p&gt;那么如果初始阶段的bootstrap secret被泄露了会怎么样呢？这就牵涉到OCM中的双向握手协议。当被管理集群中的&lt;code&gt;klusterlet&lt;/code&gt;使用bootstrap secret
发起了第一次请求的时候, hub集群不会立刻为这个请求创建客户证书和对应的访问权限。这个请求将处在&lt;code&gt;Pending&lt;/code&gt;状态，直到hub集群拥有特定管理权限的管理员
同意了&lt;code&gt;klusterlet&lt;/code&gt;的接入请求后，客户证书和特定权限才会被创建出来。这个请求中包含了&lt;code&gt;klusterlet&lt;/code&gt;启动阶段生成的动态ID，管理员需要确保这个ID和被
管理集群上&lt;code&gt;klusterlet&lt;/code&gt;的ID一致才能同意&lt;code&gt;klusterlet&lt;/code&gt;的接入。这也就确保了如果bootstrap secret被不慎泄露后，CSR也不会被管理员轻易的接受。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;klusterlet&lt;/code&gt;使用的客户证书是有过期时间的，&lt;code&gt;klusterlet&lt;/code&gt;需要在证书过期之前使用现有的客户证书发起新的&lt;code&gt;CSR&lt;/code&gt;请求来获取新的客户证书。&lt;code&gt;hub&lt;/code&gt;集群会检验
更新证书的&lt;code&gt;CSR&lt;/code&gt;请求是否合法并自动签署新的客户证书。需要注意的是由于&lt;code&gt;klusterlet&lt;/code&gt;使用了动态ID的机制，只有&lt;code&gt;klusterlet&lt;/code&gt;本身发起的&lt;code&gt;CSR&lt;/code&gt;请求才会
被自动签署。如果&lt;code&gt;klusterlet&lt;/code&gt;在集群中被卸载然后重新部署后，它必须重新使用bootstrap secret流程来获取客户证书。&lt;/p&gt;
&lt;h3 id="认证和授权的分离"&gt;认证和授权的分离&lt;/h3&gt;
&lt;p&gt;在&lt;code&gt;klusterlet&lt;/code&gt;的&lt;code&gt;CSR&lt;/code&gt;请求被接受后，它获得了被&lt;code&gt;hub&lt;/code&gt;集群认证通过的客户证书，但是它在这个时候还没有对&lt;code&gt;hub&lt;/code&gt;集群上特定资源访问的权限。
&lt;code&gt;ocm&lt;/code&gt;中还有一个单独的授权流程。每个被管理集群的&lt;code&gt;klusterlet&lt;/code&gt;时候有权限访问&lt;code&gt;hub&lt;/code&gt;集群的特定资源是被对应&lt;code&gt;ManagedCluster&lt;/code&gt;API上的
&lt;code&gt;hubAcceptsClient&lt;/code&gt;域来控制的。只有当这个域被置位&lt;code&gt;true&lt;/code&gt;时，&lt;code&gt;hub&lt;/code&gt;集群的控制器才会为对应&lt;code&gt;klusterlet&lt;/code&gt;赋予权限。而设置这个域需要用户
在&lt;code&gt;hub&lt;/code&gt;集群中对&lt;code&gt;managedcluster/accept&lt;/code&gt;具有&lt;code&gt;update&lt;/code&gt;权限才可以。如下面的&lt;code&gt;clusterrole&lt;/code&gt;的例子表示用户只能对&lt;code&gt;cluster1&lt;/code&gt;这个
&lt;code&gt;ManagedCluster&lt;/code&gt;上的&lt;code&gt;klusterlet&lt;/code&gt;赋予权限。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-yaml" data-lang="yaml"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#204a87;font-weight:bold"&gt;apiVersion&lt;/span&gt;&lt;span style="color:#000;font-weight:bold"&gt;:&lt;/span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt; &lt;/span&gt;&lt;span style="color:#000"&gt;rbac.authorization.k8s.io/v1&lt;/span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt;&lt;/span&gt;&lt;span style="color:#204a87;font-weight:bold"&gt;kind&lt;/span&gt;&lt;span style="color:#000;font-weight:bold"&gt;:&lt;/span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt; &lt;/span&gt;&lt;span style="color:#000"&gt;ClusterRole&lt;/span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt;&lt;/span&gt;&lt;span style="color:#204a87;font-weight:bold"&gt;metadata&lt;/span&gt;&lt;span style="color:#000;font-weight:bold"&gt;:&lt;/span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt; &lt;/span&gt;&lt;span style="color:#204a87;font-weight:bold"&gt;name&lt;/span&gt;&lt;span style="color:#000;font-weight:bold"&gt;:&lt;/span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt; &lt;/span&gt;&lt;span style="color:#000"&gt;open-cluster-management:hub&lt;/span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt;&lt;/span&gt;&lt;span style="color:#204a87;font-weight:bold"&gt;rules&lt;/span&gt;&lt;span style="color:#000;font-weight:bold"&gt;:&lt;/span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt;&lt;/span&gt;- &lt;span style="color:#204a87;font-weight:bold"&gt;apiGroups&lt;/span&gt;&lt;span style="color:#000;font-weight:bold"&gt;:&lt;/span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt; &lt;/span&gt;&lt;span style="color:#000;font-weight:bold"&gt;[&lt;/span&gt;&lt;span style="color:#4e9a06"&gt;&amp;#34;register.open-cluster-management.io&amp;#34;&lt;/span&gt;&lt;span style="color:#000;font-weight:bold"&gt;]&lt;/span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt; &lt;/span&gt;&lt;span style="color:#204a87;font-weight:bold"&gt;resources&lt;/span&gt;&lt;span style="color:#000;font-weight:bold"&gt;:&lt;/span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt; &lt;/span&gt;&lt;span style="color:#000;font-weight:bold"&gt;[&lt;/span&gt;&lt;span style="color:#4e9a06"&gt;&amp;#34;managedclusters/accept&amp;#34;&lt;/span&gt;&lt;span style="color:#000;font-weight:bold"&gt;]&lt;/span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt; &lt;/span&gt;&lt;span style="color:#204a87;font-weight:bold"&gt;verbs&lt;/span&gt;&lt;span style="color:#000;font-weight:bold"&gt;:&lt;/span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt; &lt;/span&gt;&lt;span style="color:#000;font-weight:bold"&gt;[&lt;/span&gt;&lt;span style="color:#4e9a06"&gt;&amp;#34;update&amp;#34;&lt;/span&gt;&lt;span style="color:#000;font-weight:bold"&gt;]&lt;/span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt; &lt;/span&gt;&lt;span style="color:#204a87;font-weight:bold"&gt;resourceNames&lt;/span&gt;&lt;span style="color:#000;font-weight:bold"&gt;:&lt;/span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt; &lt;/span&gt;&lt;span style="color:#000;font-weight:bold"&gt;[&lt;/span&gt;&lt;span style="color:#4e9a06"&gt;&amp;#34;cluster1&amp;#34;&lt;/span&gt;&lt;span style="color:#000;font-weight:bold"&gt;]&lt;/span&gt;&lt;span style="color:#f8f8f8;text-decoration:underline"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;将认证和授权的流程分开的原因是通常情况下&lt;code&gt;hub&lt;/code&gt;集群具有&lt;code&gt;approve CSR&lt;/code&gt;权限的用户和&amp;quot;允许klusterlet接入hub&amp;quot;集群的用户并不完全一致。以上
机制就可以保证即使用户拥有&lt;code&gt;approve CSR&lt;/code&gt;的权限也不能给任意的&lt;code&gt;klusterlet&lt;/code&gt;赋予接入&lt;code&gt;hub&lt;/code&gt;集群的权限。&lt;/p&gt;
&lt;h2 id="实现细节"&gt;实现细节&lt;/h2&gt;
&lt;p&gt;所有认证授权和秘钥管理的代码实现都在&lt;a href="https://github.com/open-cluster-management-io/ocm/tree/main/cmd/registration"&gt;registration&lt;/a&gt;组件中。大概的流程
如下图所示&lt;/p&gt;
&lt;p&gt;&lt;img src="https://open-cluster-management.io/blog/2022/%E8%AF%A6%E8%A7%A3ocm-klusterlet%E7%A7%98%E9%92%A5%E7%AE%A1%E7%90%86%E6%9C%BA%E5%88%B6/assets/registration-process.png" alt=""&gt;&lt;/p&gt;</description></item><item><title>通过OCM访问不同VPC下的集群</title><link>https://open-cluster-management.io/blog/2022/%E9%80%9A%E8%BF%87ocm%E8%AE%BF%E9%97%AE%E4%B8%8D%E5%90%8Cvpc%E4%B8%8B%E7%9A%84%E9%9B%86%E7%BE%A4/</link><pubDate>Wed, 20 Apr 2022 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/blog/2022/%E9%80%9A%E8%BF%87ocm%E8%AE%BF%E9%97%AE%E4%B8%8D%E5%90%8Cvpc%E4%B8%8B%E7%9A%84%E9%9B%86%E7%BE%A4/</guid><description>&lt;h2 id="问题背景"&gt;问题背景&lt;/h2&gt;
&lt;p&gt;当我们拥有多个集群时，一个很常见的需求是：不同的用户希望能访问位于不同VPC下的集群。比如，开发人员希望能够在测试集群部署应用，或者运维人员希望能够在生产集群上进行故障排查。&lt;/p&gt;
&lt;p&gt;作为多个集群的管理员，为了实现该需求，需要在各个集群为用户：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;绑定Role。&lt;/li&gt;
&lt;li&gt;提供访问配置（证书或Token）。&lt;/li&gt;
&lt;li&gt;提供访问入口。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;但是，这种方式有以下几个问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;网络隔离：集群位于私有数据中心，那么管理员就需要为集群用户进行特殊的网络配置，比如建立VPN或者跳板机。&lt;/li&gt;
&lt;li&gt;网络安全：为用户暴露的集群端口，会增加集群的安全风险。&lt;/li&gt;
&lt;li&gt;配置过期：证书中的秘钥和Token都有过期时间，管理员需要定期为用户做配置更新。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;而通过安装OCM以及cluster-proxy，managed-serviceaccount两个插件，管理员则可以在不暴露集群端口的情况下，为不同用户提供统一访问入口，并方便地管理不同用户的访问权限。&lt;/p&gt;
&lt;h2 id="基本概念"&gt;基本概念&lt;/h2&gt;
&lt;p&gt;以下，我们通过一个简单的例子来解释OCM以及cluster-proxy，managed-serviceaccount的基本概念。&lt;/p&gt;
&lt;p&gt;假设我们有3个集群，分别位于两个不同的VPC中，其中VPC-1中的集群可以被所有用户访问，而VPC-2中的2个集群只能被管理员访问。&lt;/p&gt;
&lt;p&gt;管理员希望通过VPC-1中的集群（后文称“管理集群”）为用户提供统一的访问入口，使用户可以访问VPC-2中的集群（后文称“受管集群”）。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://open-cluster-management.io/blog/2022/%E9%80%9A%E8%BF%87ocm%E8%AE%BF%E9%97%AE%E4%B8%8D%E5%90%8Cvpc%E4%B8%8B%E7%9A%84%E9%9B%86%E7%BE%A4/assets/diagram-1.png" alt=""&gt;&lt;/p&gt;
&lt;h3 id="ocm是什么"&gt;OCM是什么？&lt;/h3&gt;
&lt;p&gt;OCM 全称为 Open Cluster Management，旨在解决多集群场景下的集群注册管理，工作负载分发，以及动态的资源配置等功能。&lt;/p&gt;
&lt;p&gt;安装OCM之后，我们可以将受管集群注册加入管理集群，完成注册后，在管理集群中会创建一个与受管集群注册名相同的命名空间。比如，受管集群以cluster1注册到管理集群，那么就会对应创建一个名为cluster1的命名空间。在管理集群上，我们可以通过这些不同的命令空间来区分多个受管集群的资源。&lt;/p&gt;
&lt;p&gt;注册过程不要求受管集群向管理集群暴露访问接口。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://open-cluster-management.io/blog/2022/%E9%80%9A%E8%BF%87ocm%E8%AE%BF%E9%97%AE%E4%B8%8D%E5%90%8Cvpc%E4%B8%8B%E7%9A%84%E9%9B%86%E7%BE%A4/assets/diagram-2.png" alt=""&gt;&lt;/p&gt;
&lt;p&gt;更多有关于OCM的架构细节，请参考&lt;a href="https://open-cluster-management.io/docs/concepts/architecture/"&gt;官方文档&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id="cluster-proxy是什么"&gt;cluster-proxy是什么？&lt;/h3&gt;
&lt;p&gt;cluster-proxy是使用OCM的&lt;a href="https://github.com/open-cluster-management-io/addon-framework"&gt;addon-framework&lt;/a&gt;实现的一个基于 &lt;a href="https://github.com/kubernetes-sigs/apiserver-network-proxy"&gt;apiserver-network-proxy&lt;/a&gt;（后文简写为：ANP）的插件。插件安装后，会在管理集群上安装ANP的组件proxy-server，在受管集群上安装ANP的组件proxy-agent。&lt;/p&gt;
&lt;p&gt;接着proxy-agent通过管理集群上暴露的端口，向proxy-server发送注册请求，并建立一条全双工通信的GRPC管道。&lt;/p&gt;
&lt;p&gt;需要注意的是，cluster-proxy建立的GRPC通道只是保证了管理集群到被管理集群的网络连通性，如果用户想访问被管理集群的APIServer或者其他服务，仍需要从被管理集群获得相应的认证秘钥和权限。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://open-cluster-management.io/blog/2022/%E9%80%9A%E8%BF%87ocm%E8%AE%BF%E9%97%AE%E4%B8%8D%E5%90%8Cvpc%E4%B8%8B%E7%9A%84%E9%9B%86%E7%BE%A4/assets/diagram-3.png" alt=""&gt;&lt;/p&gt;
&lt;p&gt;更多有关cluster-proxy的信息，请参考&lt;a href="https://open-cluster-management.io/docs/getting-started/integration/cluster-proxy/"&gt;官方文档&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id="managed-serviceaccount是什么"&gt;managed-serviceaccount是什么？&lt;/h3&gt;
&lt;p&gt;Managed-serviceaccount（后文简写为：MSA）也是利用OCM的&lt;a href="https://github.com/open-cluster-management-io/addon-framework"&gt;addon-framework&lt;/a&gt;实现的插件。&lt;/p&gt;
&lt;p&gt;安装该插件后，可以在管理集群上配置&lt;code&gt;ManagedServiceAcccount&lt;/code&gt;的CR，插件会根据此CR的&lt;code&gt;spec&lt;/code&gt;配置，在目标受管集群的&lt;code&gt;open-cluster-management-managed-serviceaccount&lt;/code&gt;命名空间内，创建一个与CR同名的&lt;code&gt;ServiceAccount&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;接着插件会将此&lt;code&gt;ServiceAccount&lt;/code&gt;生成的对应token数据同步回管理集群，并在受管集群的命令空间中创建一个同名的&lt;code&gt;Secret&lt;/code&gt;，用于保存该token。整个token的数据同步都是在OCM提供的MTLS连接中进行，从而确保token不会被第三方探查到。&lt;/p&gt;
&lt;p&gt;由此集群管理员可以在hub上通过MSA来获得访问被管理集群APIServer的token。当然这个token现在还没有被赋予权限，只要管理员为该token绑定相应的Role，就可以实现访问被管理集群的权限控制。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://open-cluster-management.io/blog/2022/%E9%80%9A%E8%BF%87ocm%E8%AE%BF%E9%97%AE%E4%B8%8D%E5%90%8Cvpc%E4%B8%8B%E7%9A%84%E9%9B%86%E7%BE%A4/assets/diagram-4.png" alt=""&gt;&lt;/p&gt;
&lt;p&gt;更多有关managed-serviceaccount的信息，请参考&lt;a href="https://open-cluster-management.io/docs/getting-started/integration/managed-serviceaccount/"&gt;官方文档&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id="样例"&gt;样例&lt;/h2&gt;
&lt;p&gt;接下来通过一个简单的例子来演示如何使用OCM，cluster-proxy，managed-serviceaccount来实现跨VPC访问集群。&lt;/p&gt;
&lt;p&gt;首先从管理员视角，我们通过脚本快速创建一个基于&lt;a href="https://kind.sigs.k8s.io/"&gt;kind&lt;/a&gt;的多集群环境，其中具有一个管理集群（hub），以及两个受管集群（cluster1, cluster2）。并且 cluster1, cluster2 会通过 OCM 注册到了 hub。&lt;/p&gt;
&lt;p&gt;该脚本还会为我们安装OCM的CLI工具&lt;a href="https://github.com/open-cluster-management-io/clusteradm"&gt;clusteradm&lt;/a&gt;。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;curl -L &amp;lt;https://raw.githubusercontent.com/open-cluster-management-io/OCM/main/solutions/setup-dev-environment/local-up.sh&amp;gt; &lt;span style="color:#000;font-weight:bold"&gt;|&lt;/span&gt; bash
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后，管理员还需要安装两个插件：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#8f5902;font-style:italic"&gt;# 安装 cluster-proxy&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;helm install &lt;span style="color:#4e9a06"&gt;\\&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; -n open-cluster-management-addon --create-namespace &lt;span style="color:#4e9a06"&gt;\\&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; cluster-proxy ocm/cluster-proxy
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#8f5902;font-style:italic"&gt;# 安装 managed-service&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;helm install &lt;span style="color:#4e9a06"&gt;\\&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; -n open-cluster-management-addon --create-namespace &lt;span style="color:#4e9a06"&gt;\\&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; managed-serviceaccount ocm/managed-serviceaccount
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#8f5902;font-style:italic"&gt;# 验证 cluster-proxy 已安装&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;clusteradm get addon cluster-proxy
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#8f5902;font-style:italic"&gt;# 验证 managed-serviceaccount 已安装&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;clusteradm get addon managed-serviceaccount
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;完成安装后，管理员希望给用户能够访问cluster1，他需要通过以下命令创建一个在hub的命令空间cluster1中，创建一个MSA的CR：&lt;/p&gt;</description></item><item><title>Using the Open Cluster Management Placement for Multicluster Scheduling</title><link>https://open-cluster-management.io/blog/2022/using-the-open-cluster-management-placement-for-multicluster-scheduling/</link><pubDate>Wed, 12 Jan 2022 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/blog/2022/using-the-open-cluster-management-placement-for-multicluster-scheduling/</guid><description>&lt;p&gt;Read more at &lt;a href="https://cloud.redhat.com/blog/using-the-open-cluster-management-placement-for-multicluster-scheduling"&gt;Red Hat Cloud Blog&lt;/a&gt;.&lt;/p&gt;</description></item><item><title>Using the Open Cluster Management Add-on Framework to Develop a Managed Cluster Add-on</title><link>https://open-cluster-management.io/blog/2021/using-the-open-cluster-management-add-on-framework-to-develop-a-managed-cluster-add-on/</link><pubDate>Tue, 12 Oct 2021 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/blog/2021/using-the-open-cluster-management-add-on-framework-to-develop-a-managed-cluster-add-on/</guid><description>&lt;p&gt;Read more at &lt;a href="https://cloud.redhat.com/blog/using-the-open-cluster-management-add-on-framework-to-develop-a-managed-cluster-add-on"&gt;Red Hat Cloud Blog&lt;/a&gt;.&lt;/p&gt;</description></item><item><title>The Next Kubernetes Frontier: Multicluster Management</title><link>https://open-cluster-management.io/blog/2021/the-next-kubernetes-frontier-multicluster-management/</link><pubDate>Wed, 22 Sep 2021 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/blog/2021/the-next-kubernetes-frontier-multicluster-management/</guid><description>&lt;p&gt;Read more at &lt;a href="https://containerjournal.com/features/the-next-kubernetes-frontier-multicluster-management/"&gt;Container Journal&lt;/a&gt;.&lt;/p&gt;</description></item><item><title>Put together a user walk through for the basic Open Cluster Management API using `kind`, `olm`, and other open source technologies</title><link>https://open-cluster-management.io/blog/2021/put-together-a-user-walk-through-for-the-basic-open-cluster-management-api-using-kind-olm-and-other-open-source-technologies/</link><pubDate>Mon, 24 May 2021 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/blog/2021/put-together-a-user-walk-through-for-the-basic-open-cluster-management-api-using-kind-olm-and-other-open-source-technologies/</guid><description>&lt;p&gt;Read more at &lt;a href="https://github.com/mdelder/open-cluster-management-getting-started"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;</description></item><item><title>Setting up Open Cluster Management the hard way</title><link>https://open-cluster-management.io/blog/2021/setting-up-open-cluster-management-the-hard-way/</link><pubDate>Thu, 22 Apr 2021 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/blog/2021/setting-up-open-cluster-management-the-hard-way/</guid><description>&lt;p&gt;Read more at &lt;a href="https://github.com/sdminonne/ocm-the-hard-way"&gt;Setting up Open Cluster Management the hard way&lt;/a&gt;.&lt;/p&gt;</description></item><item><title>addon-framework</title><link>https://open-cluster-management.io/addon-framework/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/addon-framework/</guid><description/></item><item><title>APIS</title><link>https://open-cluster-management.io/api/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/api/</guid><description/></item><item><title>Argocd Pull Integration</title><link>https://open-cluster-management.io/argocd-pull-integration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/argocd-pull-integration/</guid><description/></item><item><title>Cluster Admin</title><link>https://open-cluster-management.io/clusteradm/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/clusteradm/</guid><description/></item><item><title>Cluster Permission</title><link>https://open-cluster-management.io/cluster-permission/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/cluster-permission/</guid><description/></item><item><title>Cluster Proxy</title><link>https://open-cluster-management.io/cluster-proxy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/cluster-proxy/</guid><description/></item><item><title>Configuration Policy Controller</title><link>https://open-cluster-management.io/config-policy-controller/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/config-policy-controller/</guid><description/></item><item><title>Governance Policy Addon Controller</title><link>https://open-cluster-management.io/governance-policy-addon-controller/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/governance-policy-addon-controller/</guid><description/></item><item><title>Governance Policy Framework Addon</title><link>https://open-cluster-management.io/governance-policy-framework-addon/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/governance-policy-framework-addon/</guid><description/></item><item><title>Governance Policy Propagator</title><link>https://open-cluster-management.io/governance-policy-propagator/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/governance-policy-propagator/</guid><description/></item><item><title>Managed Service Account</title><link>https://open-cluster-management.io/managed-serviceaccount/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/managed-serviceaccount/</guid><description/></item><item><title>multicloud-operators-channel</title><link>https://open-cluster-management.io/multicloud-operators-channel/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/multicloud-operators-channel/</guid><description/></item><item><title>multicloud-operators-subscription</title><link>https://open-cluster-management.io/multicloud-operators-subscription/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/multicloud-operators-subscription/</guid><description/></item><item><title>Multicluster-Controlplane</title><link>https://open-cluster-management.io/multicluster-controlplane/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/multicluster-controlplane/</guid><description/></item><item><title>OCM</title><link>https://open-cluster-management.io/ocm/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/ocm/</guid><description/></item><item><title>Policy Generator Plugin</title><link>https://open-cluster-management.io/policy-generator-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/policy-generator-plugin/</guid><description/></item><item><title>Registration</title><link>https://open-cluster-management.io/registration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/registration/</guid><description/></item><item><title>SDK-GO</title><link>https://open-cluster-management.io/sdk-go/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/sdk-go/</guid><description/></item><item><title>Search Results</title><link>https://open-cluster-management.io/search/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://open-cluster-management.io/search/</guid><description/></item></channel></rss>